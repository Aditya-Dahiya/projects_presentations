---
title: "................."
author: "Aditya Dahiya"
date: "2025-04-01"
subtitle: "........................"
categories:
  - "#TidyTuesday"
image: "thumbnails/tidy_pokemon.png"
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/projects_presentations/data_vizs.html"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
bibliography: references.bib
comments:
  giscus: 
    repo: Aditya-Dahiya/projects_presentations
---

### About the Data

...........

![.................](tidy_pokemon.png){#fig-1}

## **How I made this graphic?**

### Loading required libraries

```{r}
#| label: setup

# Data Import and Wrangling Tools
library(tidyverse)            # All things tidy

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours

pokemon_df <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-04-01/pokemon_df.csv')

```

### Visualization Parameters

```{r}
#| label: viz-params

# Font for titles
font_add_google("Alegreya",
  family = "title_font"
) 

# Font for the caption
font_add_google("Stint Ultra Condensed",
  family = "caption_font"
) 

# Font for plot text
font_add_google("Alegreya",
  family = "Josefin Slab"
) 

showtext_auto()

mypal <- c("yellow", "blue", "grey30")
# cols4all::c4a_gui()

# A base Colour
bg_col <- "white"
seecolor::print_color(bg_col)

# Colour for highlighted text
text_hil <- mypal[3]
seecolor::print_color(text_hil)

# Colour for the text
text_col <- mypal[3]
seecolor::print_color(text_col)

line_col <- "grey30"

# Define Base Text Size
bts <- 120

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
plot_caption <- paste0(
  "**Data:** {pokemon} by William Amorim", 
  " |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )
rm(github, github_username, xtwitter, 
   xtwitter_username, social_caption_1, 
   social_caption_2)

# Add text to plot-------------------------------------------------
plot_title <- "..................."

plot_subtitle <- ".............................."

```

### Exploratory Data Analysis and Wrangling

```{r}
#| label: eda

# library(summarytools)
# pokemon_df |> 
#   dfSummary() |> 
#   view()

pokemon_df |> 
  mutate(
    bmi = (height/100) / ((weight/1000)^2)
  ) |> 
  ggplot(aes(bmi)) +
  geom_boxplot() +
  scale_x_continuous(limits = c(0, 10))

# pokemon_df |> 
#   ggplot(
#     mapping = aes(
#       x = weight,
#       y = height,
#       colour = color_1
#     )
#   ) +
#   geom_point(
#     position = position_jitter(
#       width = 0.1,
#       height = 0.1
#     )
#   ) +
#   scale_colour_identity() +
#   scale_x_continuous(
#     transform = "sqrt"
#   ) +
#   scale_y_continuous(
#     transform = "sqrt"
#   )

library(magick)
pokemon_df |> 
  slice(10) |> 
  select(pokemon, url_icon, url_image) |> 
  pull(url_image) |> 
  image_read()

df1 <- pokemon_df |> 
  arrange(desc(weight)) |> 
  mutate(
    id = row_number(),
    selected_ids = id %in% c(1:15, 22, 18, 20, 21, 68, 215, 601,
                     93, 372, 946, 848, 945, 601, 130, 92, 
                     68, 72, 42, 41, 26, 44, 29, 17, 59, 36, 
                     147, 372, 22, 601, 92, 241, 57, 72, 74,
                     43, 65, 24, 19, 30, 159, 244),
    url_icon = paste0("https:", url_icon),
    pokemon = snakecase::to_title_case(pokemon)
  )

df1 |> 
  slice(10) |> 
  select(pokemon, weight, height, id, url_icon, url_image) |> 
  pull(url_image) |> 
  image_read()

# Temporarily save images of selected "Pokemons"
df1 |> 
  select(pokemon, weight, height, id, url_image)
```

### The Base Plots

```{r}
#| label: base-plot

g <- df1 |> 
  ggplot(
    mapping = aes(
      x = weight,
      y = height
    )
  ) +
  geom_point(
    mapping = aes(colour = color_1),
    position = position_jitter(
      width = 0.1,
      height = 0.1
    ),
    size = 6,
    alpha = 0.7
  ) +
  
  # Display IDs to manually find out the Pokeomons whose image 
  # we want to display
  # geom_text(
  #   data = df1 |> filter(!selected_ids),
  #   mapping = aes(
  #     label = id
  #   ),
  #   size = bts / 5,
  #   check_overlap = TRUE,
  #   colour = text_col
  # ) +
  
  # Display Images for selected Pokemons
  ggimage::geom_image(
    data = df1 |> filter(selected_ids),
    mapping = aes(image = url_icon),
    size = 2
  ) +
  
  # Label the important Pokemons
  geom_text(
    data = df1 |> filter(selected_ids),
    mapping = aes(label = pokemon),
    family = "caption_font",
    size = bts / 10,
    nudge_y = -0.5,
    check_overlap = TRUE
  ) +
  
  scale_colour_identity() +
  scale_x_continuous(
    transform = "sqrt",
    expand = expansion(c(0, 0.05)),
    breaks = c(25, 100, 250, 500, 750, 1e3)
  ) +
  scale_y_continuous(
    transform = "sqrt",
    expand = expansion(c(0, 0.05)),
    breaks = c(1, 2, 5, 10, 15)
  ) +
  coord_cartesian(
    clip = "off"
  ) +
  labs(
    x = "Weight (in grams)",
    y = "Height (in cm)",
    title = plot_title,
    subtitle = NULL,
    caption = plot_caption
  ) +
  theme_minimal(
    base_family = "body_font",
    base_size = bts
  ) +
  theme(
    # Overall
    plot.margin = margin(5,10,5,5, "mm"),
    plot.title.position = "plot",
    plot.caption.position = "plot",
    
    
    # Axes
    axis.line = element_line(
      colour = text_col,
      linewidth = 0.5,
      arrow = arrow(length = unit(5, "mm"))
    ),
    axis.text = element_text(
      margin = margin(-0.5,0,0,0, "lines"),
      colour = text_col
    ),
    axis.ticks = element_line(
      linewidth = 0.5
    ),
    axis.ticks.length = unit(5, "mm"),
    axis.title = element_text(
      margin = margin(-0.5,0,-0.5,0, "lines"),
      colour = text_col
    ),
    panel.grid.major = element_line(
      linetype = 1,
      linewidth = 0.15,
      colour = "grey50"
    ),
    panel.grid.minor = element_line(
      linetype = 1,
      linewidth = 0.1,
      colour = "grey50"
    ),
    
    # Labels
    plot.title = element_text(
      margin = margin(5,0,5,0, "mm"),
      hjust = 0.5,
      size = 2 * bts,
      colour = text_hil
    ),
    plot.caption = element_textbox(
      margin = margin(5,0,5,0, "mm"),
      family = "caption_font",
      hjust = 0.5,
      halign = 0.5,
      colour = text_hil
    )
  )

ggsave(
  filename = here::here(
    "data_vizs",
    "tidy_pokemon.png"
  ),
  plot = g,
  width = 400,
  height = 500,
  units = "mm",
  bg = bg_col
)
```

### Savings the thumbnail for the webpage

```{r}
#| label: save-image

# Saving a thumbnail

library(magick)

# Saving a thumbnail for the webpage
image_read(here::here("data_vizs", 
                      "tidy_pokemon.png")) |> 
  image_resize(geometry = "x400") |> 
  image_write(
    here::here(
      "data_vizs", 
      "thumbnails", 
      "tidy_pokemon.png"
    )
  )
```

### Session Info

```{r}
#| label: tbl-session-info
#| tbl-cap: "R Packages and their versions used in the creation of this page and graphics"
#| eval: true


sessioninfo::session_info()$packages |> 
  as_tibble() |> 
  select(package, 
         version = loadedversion, 
         date, source) |> 
  arrange(package) |> 
  janitor::clean_names(
    case = "title"
  ) |> 
  gt::gt() |> 
  gt::opt_interactive(
    use_search = TRUE
  ) |> 
  gtExtras::gt_theme_espn()
```
