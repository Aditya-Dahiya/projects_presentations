---
title: "Tidy Tuesday Datasets"
author: "Aditya Dahiya"
date: "2024-06-27"
subtitle: "..............."
categories:
  - "#TidyTuesday"
image: "thumbnails/tidy_tuesday_datasets.png"
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/session_presentations/data_vizs.html"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
bibliography: references.bib
---

.

![.............](tidy_tuesday_datasets.png)

### **How I made this graphic?**

Loading required libraries, data import & creating custom functions

```{r}
#| label: setup

# Data Import and Wrangling Tools
library(tidyverse)            # All things tidy

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours
library(patchwork)            # Combining plots

# Load data
tt_datasets <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-02/tt_datasets.csv')
# tt_summary <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-02/tt_summary.csv')
# tt_urls <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-02/tt_urls.csv')
# tt_variables <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-02/tt_variables.csv')
```

Exploratory Data Analysis & Data Wrangling

```{r}
#| label: eda

tt_datasets |> 
  ggplot(aes(observations)) +
  geom_histogram() +
  scale_x_log10()

tt_datasets |> 
  ggplot(aes(variables)) +
  geom_histogram() +
  scale_x_log10()

plotdf1 <- tt_datasets |> 
  mutate(overall = variables * observations) |> 
  arrange(desc(overall)) |> 
  mutate(
    variables1 = log10(variables),
    observations1 = log10(observations)
  ) |> 
  mutate(
    x_min = -variables / 2,
    x_max = +variables / 2,
    y_min = -observations / 2,
    y_max = observations / 2,
    year = as_factor(year)
  ) |> 
  mutate(
    var_col = case_when(
      overall == max(overall) ~ TRUE,
      overall == min(overall) ~ TRUE,
      variables == max(variables) ~ TRUE,
      observations == max(observations) ~ TRUE,
      .default = FALSE
    )
  ) |> 
  arrange(var_col)

plotdf1 |> 
  filter(var_col)
```

Visualization Parameters

```{r}
#| label: viz-params

# Font for titles
font_add_google("Handlee",
  family = "title_font"
) 

# Font for the caption
font_add_google("Saira Extra Condensed",
  family = "caption_font"
) 

# Font for plot text
font_add_google("Dosis",
  family = "body_font"
) 

showtext_auto()

# Credits for coffeee palette
mypal <- paletteer::paletteer_d("nbapalettes::cavaliers_retro")

bg_col <- "white"
text_col <-  mypal[2]
text_hil <- mypal[2]
bts = 80

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
```

Annotation Text for the Plot

```{r}
#| label: text-for-plot

plot_title <- "#TidyTuesday Datasets"

plot_caption <- paste0(
  "**Data:** #TidyTuesday Datasets", 
  " |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )

plot_subtitle <- str_wrap("...............................", 80)
```

The static plot

```{r}
#| label: static-plot

g <- plotdf1 |> 
  ggplot() +
  geom_rect(
    mapping = aes(
      ymin = y_min,
      ymax = y_max,
      xmin = x_min,
      xmax = x_max,
      colour = var_col,
      linewidth = var_col
    ),
    alpha = 0.1,
    fill = mypal[1]
  ) +
  scale_colour_manual(values = c("white", mypal[2])) +
  scale_linewidth_manual(values = c(0.05,  0.75)) +
  scale_x_continuous(
    breaks = c(-3, -2, -1, 0, 1, 2, 3),
    labels = c(1000, 100, 10, 0, 10, 100, 1000)
  ) +
  scale_y_continuous(
    breaks = c(-5:-1, 0, 1:5),
    labels = c(10^(5:1), 0, 10^(1:5))
  ) +
  labs(
    title = plot_title,
    subtitle = plot_subtitle,
    caption = plot_caption,
    x = "Number of Variables (Rows)",
    y = "Number of Observations (Columns)"
  ) +
  theme_classic(
    base_family = "body_font",
    base_size = bts
  ) +
  theme(
    legend.position = "none",
    axis.line = element_line(
      arrow = arrow(
        ends = "both",
        length = unit(5, "mm"), 
        angle = 20
      ),
      linewidth = 0.2
    ),
    plot.title = element_text(
      colour = text_col,
      margin = margin(10,0,0,0, "mm"),
      hjust = 0.5,
      size = bts * 3
    ),
    plot.subtitle = element_text(
      colour = text_col,
      margin = margin(10,0,0,0, "mm")
    ),
    plot.caption = element_textbox(
      hjust = 0.5,
      margin = margin(0,0,10,0, "mm"),
      colour = text_col
    ),
    plot.margin = margin(5,5,5,5, "mm"),
    axis.title = element_text(
      colour = text_col,
      margin = margin(0,0,0,0, "mm")
    ),
    axis.text = element_text(
      colour = text_col,
      margin = margin(0,0,0,0, "mm")
    ),
    axis.ticks = element_line(
      colour = text_col,
      linewidth = 0.2
    ),
    axis.ticks.length = unit(2, "mm")
  )

ggsave(
  filename = here::here("data_vizs", "tidy_tuesday_datasets.png"),
  plot = g,
  width = 400,    # Best Twitter Aspect Ratio = 4:5
  height = 500,   
  units = "mm",
  bg = bg_col
)

```

Plot compilation

```{r}
#| label: plot-compile

library(patchwork)

g_full <- g + 
  inset_element(
    p = g_inset,
    left = 0, right = 0.4,
    bottom = 0.35, top = 0.65,
    align_to = "panel"
  ) +
  plot_annotation(
    theme = theme(
      plot.background = element_rect(
        fill = "transparent",
        colour = "transparent"
      ),
      panel.background = element_rect(
        fill = "transparent",
        colour = "transparent"
      )
    )
  )
```

Savings the graphics

```{r}
#| label: save-image

library(magick)
# Saving a thumbnail for the webpage
image_read(here::here("data_vizs", "tidy_rainbow.png")) |> 
  image_resize(geometry = "400") |> 
  image_write(here::here("data_vizs", "thumbnails", "tidy_rainbow.png"))

```
