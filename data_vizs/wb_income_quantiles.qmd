---
title: "GDP vs. Life Expectancy"
author: "Aditya Dahiya"
date: "2024-05-16"
subtitle: "World Bank data shows a relation between Wealth and Health - correlated, is it causative?"
categories:
  - "World Bank Data"
  - "A4 Size Viz"
  - "Governance"
image: "thumbnails/wb_income_quantiles.png"
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/session_presentations/data_vizs.html"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
bibliography: references.bib
---

# GDP per capita vs. Life Expectancy

I utilized data from the World Bank's [DataBank](https://databank.worldbank.org/), a comprehensive analysis and visualization tool that houses a diverse collection of time series data spanning various topics. Specifically, I extracted information on Gross Domestic Product (GDP) and life expectancy for multiple countries over several years. Using this data, I created a scatter plot to explore the relationship between a country's GDP and its life expectancy. The scatter plot allows for a visual examination of potential correlations or patterns between these two variables across different nations and over time. DataBank enables users to customize queries, generate tables, charts, and maps effortlessly, making it a valuable resource for data analysis and visualization. This tool facilitates not only the exploration of data but also the sharing and embedding of findings, encouraging collaboration and further analysis.

### **How I made this graphic?**

Loading required libraries, data import & creating custom functions

```{r}
#| label: setup

# Data Import and Wrangling Tools
library(tidyverse)            # All things tidy

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours
library(patchwork)            # Combining plots

# Extras and Annotations
library(magick)               # Image processing

# Credits: Geospatial Science and Human Security at ORNL
# Credits: @jpiburn, @petrbouchal, @bapfeld
# install.packages("wbstats")
library(wbstats)

# Data Import and Wrangling Tools
library(tidyverse)            # All things tidy

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours
library(patchwork)            # Combining plots

# Extras and Annotations
library(magick)               # Image processing

# Credits: Geospatial Science and Human Security at ORNL
# Credits: @jpiburn, @petrbouchal, @bapfeld
# install.packages("wbstats")
library(wbstats)

indicators <- wbstats::wb_indicators()

selected_indicators <- indicators |>
  filter(str_detect(indicator, "Income share held by")) |>
  pull(indicator_id)

rawdf <- wb_data(
  indicator = selected_indicators,
  start_date = 1980,
  end_date = 2023
) |>
  janitor::clean_names()

```

Exploratory Data Analysis & Data Wrangling

```{r}
#| label: eda

# indicators |> 
#   filter(str_detect(indicator_desc, "Population, ages")) |> 
#   filter(str_detect(indicator, "total")) |> 
#   select(indicator)
# 
# indicators |> 
#   mutate(indicator_desc = str_to_lower(indicator_desc)) |> 
#   filter(str_detect(indicator_desc, "quintile")) |> 
#   filter(str_detect(indicator_desc, "income")) |> 
#   select(indicator) |> 
#   print(n = Inf)
#
rawdf |>
  drop_na() |>
  # visdat::vis_miss()
  distinct(country, iso2c) |> 
  print(n = Inf)


selected_countries <- c("AR", "AU", "BR", "CA", "CN",
                        "FR", "DE", "IN", "ID", "IT",
                        "JP", "MX", "KR", "RU", "SA",
                        "ZA", "TR", "UK", "US")

country_levels <- rawdf |> 
#  filter(iso2c %in% selected_countries) |> 
  drop_na() |> 
  group_by(iso2c) |> 
  slice_max(order_by = date, n = 1) |> 
  ungroup() |> 
  select(iso2c, country, si_dst_05th_20) |> 
  filter(iso2c %in% selected_countries) |> 
  arrange(desc(si_dst_05th_20)) |> 
  pull(country)


df <- rawdf |> 
  filter(iso2c %in% selected_countries) |> 
  drop_na() |> 
  group_by(iso2c) |> 
  slice_max(order_by = date, n = 1) |> 
  ungroup() |> 
  select(
    iso2c, country,
    ends_with("20")
    ) |> 
  pivot_longer(
    cols = -c(iso2c, country),
    values_to = "value",
    names_to = "quantile"
  ) |> 
  mutate(
    quantile = str_remove(quantile, "si_dst_"),
    quantile = str_remove(quantile, "_20"),
    quantile = if_else(quantile == "frst", "01st", quantile),
    quantile = fct(
      quantile,
      levels = c("01st", "02nd", "03rd", "04th", "05th")
    ),
    country = fct(country, levels = country_levels),
    country = fct_rev(country),
    iso2c = str_to_lower(iso2c)
  )
```

Visualization Parameters

```{r}
#| label: viz-params


# Font for titles
font_add_google("Nanum Myeongjo",
  family = "title_font"
) 

font_add_google("Amita",
  family = "title2_font"
  )
# Font for the caption
font_add_google("Barlow Condensed",
  family = "caption_font"
) 

# Font for plot text
font_add_google("Stint Ultra Condensed",
  family = "body_font"
) 

ts <- 80

showtext_auto()

# Colour Palettes
mypal <- paletteer::paletteer_d("PNWColors::Sunset2")

bg_col <- mypal[5] |> lighten(0.8)       # Background Colour
text_col <- mypal[1] |> darken(0.6)      # Colour for text
text_hil <- mypal[1] |> darken(0.3)      # Colour for highlighted text
 
# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
```

Annotation Text for the Plot

```{r}
#| label: text-for-plot

plot_title <- "Rich vs. Poor in G-20 Nations"

plot_caption <- paste0(
  "Data: World Bank's Databank.", 
  " |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )

plot_subtitle <- str_wrap("The distribution of wealth among different income groups in various countries. Each bar represents a country, and the segments within each bar indicate the percentage of total wealth owned by each 20% (quintile) of the population, from the poorest to the richest. The data, derived from household surveys, reflect how income is shared among the population. Countries like South Africa and Brazil exhibit significant inequality, with the wealthiest 20% owning a large portion of the country's wealth, while the poorest 20% own very little. In contrast, countries like South Korea, France, and Canada demonstrate a more equitable distribution of wealth, where the wealth is more evenly spread across all income groups.", 100)

```

The base plot

```{r}
#| label: base-plot

df |> 
  ggplot(
    aes(
      x = value,
      y = country,
      fill = quantile
    )
  ) + 
  geom_col(
    position = position_stack(),
    alpha = 0.5,
    colour = bg_col
  ) +
  geom_text(
    aes(
      label = paste0(value, "%"),
      colour = quantile
    ),
    position = position_stack(),
    hjust = 1, vjust = 1,
    size = 3
  ) +
  scale_y_discrete() +
  scale_x_continuous(
    position = "top",
    breaks = seq(0, 100, 20),
    labels = label_number(suffix = "%"),
    expand = expansion(c(0.1, 0))
  ) +
  scale_fill_manual(values = mypal) +
  scale_colour_manual(values = mypal |> darken(0.5)) +
  labs(
    title = plot_title,
    subtitle = plot_subtitle,
    caption = plot_caption,
    x = NULL, y = NULL
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.line.x = element_line(
      linetype = 3
    ),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.major.x = element_line(
      linetype = 3,
      colour = text_col
    ),
    plot.background = element_rect(
      fill = bg_col,
      colour = "transparent"
    ),
    plot.title = element_text(
      hjust = 0.5,
      family = "title_font",
      colour = text_hil
    ),
    plot.subtitle = element_text(
      hjust = 0,
      family = "body_font",
      colour = text_col,
      lineheight = 0.4
    ),
    plot.caption = element_textbox(
      hjust = 0.5,
      colour = text_hil
    ),
    plot.title.position = "plot"
  )
```

Adding annotations to the plot

```{r}
#| label: add-annotations

# A QR Code for the infographic
url_graphics <- paste0(
  "https://aditya-dahiya.github.io/projects_presentations/data_vizs/",
  # The file name of the current .qmd file
  "wb_income_quantiles",         
  ".html"
)
# remotes::install_github('coolbutuseless/ggqr')
# library(ggqr)
plot_qr <- ggplot(
  data = NULL, 
  aes(x = 0, y = 0, label = url_graphics)
  ) + 
  ggqr::geom_qr(
    colour = text_hil, 
    fill = bg_col,
    size = 2
    ) +
  coord_fixed() +
  theme_void() +
  theme(plot.background = element_rect(
    fill = NA, 
    colour = NA
    ),
    panel.background = element_rect(
      fill = NA,
      colour = NA
    )
  )

# Compiling the plots

g <- g_base +
  inset_element(
    p = plot_qr,
    left = 0.75, right = 0.90,
    bottom = 0.5, top = 0.6,
    align_to = "panel",
    clip = FALSE
  ) + 
  plot_annotation(
    theme = theme(
      plot.background = element_rect(
        fill = "transparent",
        colour = "transparent"
      )
    )
  )



```

Savings the graphics

```{r}
#| label: save-image

ggsave(
  filename = here::here("data_vizs", "a4_wb_income_quantiles.png"),
  plot = g,
  width = 2 * 210,        
  height = 2 * 297,   
  units = "mm",
  bg = bg_col
)


# Saving a thumbnail for the webpage
image_read(here::here("data_vizs", "wb_income_quantiles.png")) |> 
  image_resize(geometry = "400") |> 
  image_write(here::here("data_vizs", 
                         "thumbnails", 
                         "wb_gdp_lifeexp.png"))

```
