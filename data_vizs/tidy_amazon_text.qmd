---
title: "............"
author: "Aditya Dahiya"
date: "2025-03-25"
subtitle: "..................."
categories:
  - "#TidyTuesday"
image: "thumbnails/tidy_amazon_text.png"
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/projects_presentations/data_vizs.html"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
bibliography: references.bib
comments:
  giscus: 
    repo: Aditya-Dahiya/projects_presentations
---

### About the Data

...........................

![..........................](tidy_amazon_text.png){#fig-1}

## **How I made this graphic?**

### Loading required libraries

```{r}
#| label: setup

# Data Import and Wrangling Tools
library(tidyverse)            # All things tidy

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours
library(tidytext)             # Text Analysis for R

report_words_clean <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-03-25/report_words_clean.csv')
```

### Visualization Parameters

```{r}
#| label: viz-params

# Font for titles
font_add_google("Belleza",
  family = "title_font"
) 

# Font for the caption
font_add_google("Saira Extra Condensed",
  family = "caption_font"
) 

# Font for plot text
font_add_google("Cuprum",
  family = "body_font"
) 

showtext_auto()

mypal <- paletteer::paletteer_d("ltc::trio3")
# cols4all::c4a_gui()

# A base Colour
bg_col <- "white"
seecolor::print_color(bg_col)

# Colour for highlighted text
text_hil <- mypal[3]
seecolor::print_color(text_hil)

# Colour for the text
text_col <- colorspace::darken("#009E73", 0.5)
seecolor::print_color(text_col)

line_col <- "grey30"

# Define Base Text Size
bts <- 120

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
plot_caption <- paste0(
  "**Data:** Emil Hvitfeldt's {palmtrees}", 
  " |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )
rm(github, github_username, xtwitter, 
   xtwitter_username, social_caption_1, 
   social_caption_2)

# Add text to plot-------------------------------------------------
plot_title <- ".........................."

plot_subtitle <- "....................................."

```

### Exploratory Data Analysis and Wrangling

```{r}
#| label: eda

report_words_clean |> 
  anti_join(stop_words)


# Number of words per year

report_words_clean |> 
  count(year) |> 
  ggplot(aes(year, n)) +
  geom_point() +
  geom_line()


report_words_clean |> 
  count(year) |> 
  mutate(
    grp_var = case_when(
      year %in% 2005:2013 ~ "2005-13",
      year %in% 2014:2023 ~ "2014-20"
    )
  ) |> 
  count(grp_var, wt = n)

df1 <- report_words_clean |> 
  mutate(
    grp_var = case_when(
      year %in% 2005:2013 ~ "2005-13",
      year %in% 2014:2020 ~ "2014-20"
    )
  ) |> 
  group_by(grp_var) |> 
  count(word)
  
```

### The Base Plots

Using {[ggblend](https://mjskay.github.io/ggblend/)} [@ggblend] to blend and compose colours

```{r}
#| label: base-plot




  labs(
    x = "Maximum Stem Diameter (cm)",
    y = "Maximum Stem Height (m)",
    title = plot_title,
    caption = plot_caption,
    colour = "Stem Erectness",
    shape = "Climbing Habit"
  ) +
  
  theme_classic(
    base_family = "caption_font",
    base_size = bts
  ) +
  theme(
    
    # Overall
    plot.margin = margin(15,10,15,10, "mm"),
    plot.title.position = "plot",
    panel.grid.major = element_line(
      linetype = "longdash",
      linewidth = 0.2,
      colour = "grey60"
    ),
    panel.grid.minor = element_line(
      linetype = "longdash",
      linewidth = 0.1,
      colour = "grey80"
    ),
    
    # Axis Lines
    axis.ticks = element_line(
      colour = line_col,
      linewidth = 0.2
    ),
    axis.line = element_line(
      colour = "grey10",
      arrow = arrow(
        length = unit(10, "mm")
      ),
      linewidth = 0.4
    ),
    axis.ticks.length = unit(6, "mm"),
    text = element_text(
      colour = text_col,
      lineheight = 0.3
    ),
    
    # Axis Text
    axis.text = element_text(
      margin = margin(0,0,0,0, "mm"),
      colour = text_col
    ),
    axis.title = element_text(
      margin = margin(0,0,0,0, "mm"),
      colour = text_col
    ),
    
    # Labels and Strip Text
    plot.title = element_text(
      colour = text_hil,
      margin = margin(5,0,15,0, "mm"),
      size = bts * 1.7,
      lineheight = 0.3,
      hjust = 0.5,
      family = "title_font"
    ),
    plot.caption = element_textbox(
      family = "caption_font",
      margin = margin(10,0,5,0, "mm"),
      hjust = 0.5,
      colour = text_hil
    ),
    
    # Legend
    legend.position = "inside",
    legend.position.inside = c(1, 0.75),
    legend.direction = "vertical",
    legend.box = "horizontal",
    legend.justification.inside = c(1, 1),
    legend.box.margin = margin(0,0,0,0, "mm"),
    legend.margin = margin(0,0,0,0, "mm"),
    legend.title = element_text(
      margin = margin(0,0,5,0, "mm"),
      hjust = 0.5
    ),
    legend.text = element_text(
      margin = margin(2,0,2,3, "mm")
    ),
    legend.title.position = "top"
  )


ggsave(
  filename = here::here(
    "data_vizs",
    "tidy_amazon_text.png"
  ),
  plot = g,
  width = 400,
  height = 500,
  units = "mm",
  bg = bg_col
)
```

### Savings the thumbnail for the webpage

```{r}
#| label: save-image

# Saving a thumbnail

library(magick)

# Saving a thumbnail for the webpage
image_read(here::here("data_vizs", 
                      "tidy_amazon_text.png")) |> 
  image_resize(geometry = "x400") |> 
  image_write(
    here::here(
      "data_vizs", 
      "thumbnails", 
      "tidy_amazon_text.png"
    )
  )
```

### Session Info

```{r}
#| label: tbl-session-info
#| tbl-cap: "R Packages and their versions used in the creation of this page and graphics"
#| eval: true


sessioninfo::session_info()$packages |> 
  as_tibble() |> 
  select(package, 
         version = loadedversion, 
         date, source) |> 
  arrange(package) |> 
  janitor::clean_names(
    case = "title"
  ) |> 
  gt::gt() |> 
  gt::opt_interactive(
    use_search = TRUE
  ) |> 
  gtExtras::gt_theme_espn()
```
