---
title: "WW-2 Fighter Ject Aircrafts"
author: "Aditya Dahiya"
date: "2025-01-27"
subtitle: ",................................."
categories:
  - "{magick}"
  - "Images"
  - "Geopolitics"
image: "thumbnails/viz_ww2_fighter_aircrafts.png"
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/projects_presentations/data_vizs.html"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
bibliography: references.bib
comments:
  giscus: 
    repo: Aditya-Dahiya/projects_presentations
---

![A global visualization of UTM zones, showcasing latitudinal bands labeled from C to X and longitudinal strips numbered 1 to 60, forming a precise grid for geospatial reference.](viz_ww2_fighter_aircrafts.png){#fig-1}

### Source of Data

The information provided is compiled using ChatGPT from the following sources:

1.  "The Complete Book of Fighters" by William Green and Gordon Swanborough
2.  "Jane's Fighting Aircraft of World War II" by Leonard Bridgman.
3.  [Aviation History Online Museum](https://www.aviation-history.com): A reliable online source for historical aircraft specifications.
4.  [Military Factory](https://www.militaryfactory.com): A database of military equipment, including fighter aircraft used in WWII.

### **How I made this graphic?**

Loading required libraries, data import & creating custom functions.

```{r}
#| label: setup

# Data Wrangling & Plotting Tools
library(tidyverse)            # All things tidy
library(magick)               # Processing Images in R
library(httr)                 # Getting images from the Web

# Plot touch-up tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours
library(patchwork)            # Compiling Plots


library(tibble)

# Create a tibble with fighter aircraft details
wwii_fighter_aircraft <- tibble::tibble(
  Country = c(
    "Germany", "United Kingdom", "United States", 
    "Japan", "Soviet Union",
    "Italy", "France", "Germany", "United Kingdom", "United States",
    "Japan", "Soviet Union", "Germany", 
    "United States", "United Kingdom",
    "Japan", "United States", "Soviet Union", 
    "Italy", "Germany"
  ),
  Aircraft_Name = c(
    "Messerschmitt Me 262", "Supermarine Spitfire", 
    "North American P-51 Mustang", "Mitsubishi A6M Zero",
    "Yakovlev Yak-3", "Macchi C.202 Folgore", 
    "Dewoitine D.520", "Focke-Wulf Fw 190", 
    "Hawker Tempest", "Republic P-47 Thunderbolt", 
    "Kawasaki Ki-61 Hien", "Lavochkin La-5",
    "Heinkel He 162", "Lockheed P-38 Lightning", 
    "Gloster Meteor", "Nakajima Ki-84 Hayate",
    "Curtiss P-40 Warhawk", "Mikoyan-Gurevich MiG-3", 
    "Reggiane Re.2005 Sagittario", "Messerschmitt Bf 109"
  ),
  Top_Speed_kmh = c(
    870, 595, 703, 533, 655, 600, 540, 652, 695, 686, 591, 648, 890, 667, 668, 631, 579, 640, 628, 640
  ),
  Approx_Numbers_Produced = c(
    1430, 20351, 15886, 10939, 4848, 11500, 905, 20000, 1702, 15636, 2754, 9920, 320, 10037, 3947, 3514, 13738, 3172, 750, 33984
  )
) |> 
  janitor::clean_names() |> 
  filter(aircraft_name != "Heinkel He 162") |> 
  filter(approx_numbers_produced > 1000)
```

Visualization Parameters

```{r}
#| label: viz-params

# Font for titles
font_add_google("Bree Serif",
  family = "title_font"
) 

# Font for the caption
font_add_google("Stint Ultra Condensed",
  family = "caption_font"
) 

# Font for plot text
font_add_google("Copse",
  family = "body_font"
) 

showtext_auto()

mypal <- paletteer::paletteer_d("lisa::C_M_Coolidge")

# A base Colour
bg_col <- "white"
seecolor::print_color(bg_col)

land_col <- mypal[4]
seecolor::print_color(land_col)

# Colour for highlighted text - 1
text_hil1 <- mypal[2]
seecolor::print_color(text_hil1)

# Colour for the text - 1
text_col1 <- mypal[1]
seecolor::print_color(text_col1)


# Colour for highlighted text - 2
text_hil2 <- mypal[4]
seecolor::print_color(text_hil2)

# Colour for the text - 2
text_col2 <- mypal[5]
seecolor::print_color(text_col2)

# Define Base Text Size
bts <- 80 

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil1}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil1}'>{xtwitter_username}</span>")
plot_caption <- paste0(
  "**Data:** Open Street Maps; Census of India", 
  " |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )
rm(github, github_username, xtwitter, 
   xtwitter_username, social_caption_1, 
   social_caption_2)

# Add text to plot-------------------------------------------------
plot_title <- "..........."

plot_subtitle <- "..............................................."
```

The Base Plot

```{r}
#| label: base-plot

wwii_fighter_aircraft |>
  arrange(desc(top_speed_kmh))

wwii_fighter_aircraft |> 
  ggplot(
    mapping = aes(
      x = top_speed_kmh,
      y = reorder(aircraft_name, top_speed_kmh)
    )
  ) +
  geom_col() +
  coord_cartesian(
    xlim = c(500, 900)
  )

ggsave(
  filename = here::here(
    "data_vizs",
    "viz_utm_zones.png"
  ),
  plot = g,
  width = 500,
  height = 400,
  units = "mm",
  bg = bg_col
)


```

Savings the thumbnail for the webpage

```{r}
#| label: save-image

# Saving a thumbnail

library(magick)
# Saving a thumbnail for the webpage
image_read(here::here("data_vizs", 
                      "viz_ww2_fighter_aircrafts.png")) |> 
  image_resize(geometry = "x400") |> 
  image_write(
    here::here(
      "data_vizs", 
      "thumbnails", 
      "viz_ww2_fighter_aircrafts.png"
    )
  )
```

Session Info

```{r}
#| label: tbl-session-info
#| tbl-cap: "R Packages and their versions used in the creation of this page and graphics"
#| eval: true


# Data Wrangling & Plotting Tools
library(tidyverse)            # All things tidy
library(sf)                   # Simple Features in R

# Plot touch-up tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours
library(patchwork)            # Compiling Plots

sessioninfo::session_info()$packages |> 
  as_tibble() |> 
  select(package, 
         version = loadedversion, 
         date, source) |> 
  arrange(package) |> 
  janitor::clean_names(
    case = "title"
  ) |> 
  gt::gt() |> 
  gt::opt_interactive(
    use_search = TRUE
  ) |> 
  gtExtras::gt_theme_espn()
```

An attempt at an Interactive Version

```{r}
# A map with utm zones and countries falling in it
world_map <- rnaturalearth::ne_countries(
  scale = "small",
  returnclass = "sf"
) |> 
  select(name, geometry) |> 
  st_transform("EPSG:4326")


utm_zones <- read_sf(
  here::here(
    "data",
    "world_utm_grid_arcgis.gpkg"
  )
) |> 
  janitor::clean_names() |> 
  mutate(id = row_number()) |> 
  st_transform("EPSG:4326")


utm_zones |> 
  slice_head(n = 5)
```

```{r}

# Data Wrangling & Plotting Tools
library(tidyverse)            # All things tidy
library(sf)                   # Simple Features in R
library(ggiraph)              # Interactive Plots

world_map <- rnaturalearth::ne_countries(
  scale = "large",
  returnclass = "sf"
) |> 
  select(name, geometry)


utm_zones <- read_sf(
  here::here(
    "data",
    "world_utm_grid_arcgis.gpkg"
  )
) |> 
  janitor::clean_names() |> 
  mutate(id = row_number())


g <- ggplot() +
  
  # Displaying UTM Zones
  geom_sf_interactive(
    data = utm_zones,
    mapping = aes(
      tooltip = paste0(row, zone),
      data_id = id
    ),
    linewidth = 0.15,
    colour = alpha(text_hil2, 0.5),
    fill = NA
  ) +
  
  # The World Map
  geom_sf(
    data = world_map,
    alpha = 0.5,
    colour = alpha(land_col, 0.4),
    fill = alpha(land_col, 0.4),
    linewidth = 0.2
  ) +
  
  # Coordinates
  coord_sf(
    crs = "EPSG:4326",
    expand = FALSE,
    clip = "off",
    xlim = c(-188, 188),
    ylim = c(-86, 86),
    default_crs = "EPSG:4326"
  ) +
  
  # Labels and Themes
  labs(
    x = "Longitudanal Zones",
    y = "Latitudanal Segments",
    title = plot_title,
    subtitle = str_wrap(plot_subtitle, 150)
  ) +
  ggthemes::theme_map() +
  theme(
    text = element_text(
      colour = text_hil2
    )
  )

girafe(
  ggobj = g
)
```
