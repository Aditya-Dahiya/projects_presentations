---
title: "tidy_billboard_hot_100"
author: "Aditya Dahiya"
date: "2025-08-28"
subtitle: "tidy_billboard_hot_100"
categories:
  - "#TidyTuesday"
image: "thumbnails/tidy_billboard_hot_100"
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - linkate
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/projects_presentations/data_vizs.html"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
bibliography: references.bib
comments:
  giscus: 
    repo: Aditya-Dahiya/projects_presentations
---

# About the Data

The Billboard Hot 100 Number Ones Database represents a comprehensive collection of data about every song to reach number one on the [Billboard Hot 100](https://www.billboard.com/charts/hot-100/) between August 4, 1958 and January 11, 2025. This extensive dataset was meticulously compiled by [Chris Dalla Riva](https://bio.site/uncharted_territory) over seven years as part of his research for the book [*Uncharted Territory: What Numbers Tell Us about the Biggest Hit Songs and Ourselves*](https://bio.site/uncharted_territory), and continues to power his music analytics newsletter [*Can't Get Much Higher*](https://www.cantgetmuchhigher.com/). The database contains detailed information across 87 variables for each chart-topper, including musical characteristics sourced from [Spotify](https://open.spotify.com/), genre classifications from both Dalla Riva's team and [Discogs](https://www.discogs.com/), songwriter and producer credits from [BMI/ASCAP databases](https://www.bmi.com/), demographic information about artists, lyrical content analysis, and technical details like song structure, instrumentation, and recording characteristics. This rich dataset enables researchers to explore trends in popular music across nearly seven decades, from the evolution of song length and musical keys to changing patterns in artist demographics and lyrical themes, providing unprecedented insights into the cultural and musical landscape of American popular music.

![tidy_billboard_hot_100](tidy_billboard_hot_100.png){#fig-1}

## How I Made This Graphic

.....

### Loading required libraries

```{r}
#| label: setup

pacman::p_load(
  tidyverse,            # All things tidy
  
  scales,               # Nice Scales for ggplot2
  fontawesome,          # Icons display in ggplot2
  ggtext,               # Markdown text support for ggplot2
  showtext,             # Display fonts in ggplot2
  colorspace,           # Lighten and Darken colours

  patchwork,            # Composing Plots
  sf                    # Spatial Operations
)

# Using R
# Option 2: Read directly from GitHub

billboard <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-08-26/billboard.csv')

# topics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-08-26/topics.csv')
```

### Visualization Parameters

```{r}
#| label: viz-params

# Font for titles
font_add_google("Saira",
  family = "title_font"
) 

# Font for the caption
font_add_google("Saira Condensed",
  family = "body_font"
) 

# Font for plot text
font_add_google("Saira Extra Condensed",
  family = "caption_font"
) 

showtext_auto()

# A base Colour
bg_col <- "white"
seecolor::print_color(bg_col)

# Colour for highlighted text
text_hil <- "grey20"
seecolor::print_color(text_hil)

# Colour for the text
text_col <- "grey20"
seecolor::print_color(text_col)

line_col <- "grey30"

# Define Base Text Size
bts <- 80

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
plot_caption <- paste0(
  "**Data:** ......................", 
  " |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )
rm(github, github_username, xtwitter, 
   xtwitter_username, social_caption_1, 
   social_caption_2)

# Add text to plot-------------------------------------------------
plot_title <- "tidy_billboard_hot_100"

plot_subtitle <- "tidy_billboard_hot_100"

str_view(plot_subtitle)
```

### Exploratory Data Analysis and Wrangling

```{r}
#| label: eda

billboard |> 
  ggplot(
    mapping = aes(
      x = length_sec
    )
  ) +
  geom_histogram(
    fill = "white",
    colour = "grey20",
    bins = 100
  )

billboard |> 
  distinct(cdr_genre)

pacman::p_load(summarytools)
billboard |> 
  dfSummary() |> 
  view()

plotdf <- billboard |> 
  mutate(
    length_x_min = 0 - (length_sec/2),
    length_x_max = 0 + (length_sec/2),
    colour_var = case_when(
      artist_male == 0 ~ "Female",
      artist_male == 1 ~ "Male",
      artist_male == 2 ~ "Both Male and Female",
      artist_male == 3 ~ "Both Male and Female"
    )
  )
```

### The Plot

```{r}
#| label: base-plot


g <- plotdf |> 
  ggplot(
    aes(
      y = date,
      yend = date,
      x = length_x_min,
      xend = length_x_max,
      linewidth = weeks_at_number_one,
      colour = as_factor(fade_out),
      # colour = as_factor(colour_var)
    )
  ) +
  geom_segment(
    alpha = 0.5
  ) + 
  scale_linewidth_continuous(
    range = c(0.1, 6)
  ) +
  scale_x_continuous(
    limits = c(-200, 200),
    oob = scales::squish,
    breaks = seq(-200, 200, 40),
    labels = abs(seq(-200, 200, 40))
  ) +
  scale_colour_manual(
    values = c("red", "blue"),
    labels = c("The Song\ndoes not\nfade out", "The Song\nfades out")
  ) +
  labs(
    title = plot_title,
    subtitle = plot_subtitle,
    x = "Year",
    y = "Duration of the song (in seconds)",
    caption = plot_caption,
    linewidth = "Total Weeks spent as No. 1 song on Billboard",
    colour = "Does the song fade out?"
  ) +
  ggthemes::theme_map(
    base_family = "body_font",
    base_size = bts
  ) +
  theme(
    
    legend.position = "bottom",
    legend.margin = margin(0,0,0,0, "mm"),
    legend.box.margin = margin(0,0,0,0, "mm"),
    legend.text = element_text(
      margin = margin(0,0,0,2, "mm")
    ),
    legend.title = element_text(
      margin = margin(0,0,0,0, "mm")
    ),
    
    # Overall
    text = element_text(
      margin = margin(0,0,0,0, "mm"),
      colour = text_col,
      lineheight = 0.3
    ),
    
    # Labels and Strip Text
    plot.title = element_text(
      margin = margin(5,0,5,0, "mm"),
      hjust = 0.5,
      vjust = 0.5,
      colour = text_hil,
      size = 2.5 * bts,
      family = "body_font",
      face = "bold"
      ),
    plot.subtitle = element_textbox(
      margin = margin(2,0,5,0, "mm"),
      vjust = 0.5,
      colour = text_hil,
      size =  bts,
      halign = 0.5,
      hjust = 0.5,
      valign = 0.5,
      family = "body_font",
      lineheight = 0.3
      ),
    plot.caption = element_textbox(
      margin = margin(8,0,5,0, "mm"),
      hjust = 0.5,
      halign = 0.5,
      colour = text_hil,
      size = bts * 0.8,
      family = "caption_font"
    ),
    plot.caption.position = "plot",
    plot.title.position = "plot",
    plot.margin = margin(5,5,5,5, "mm")
  )

ggsave(
  filename = here::here(
    "data_vizs",
    "tidy_billboard_hot_100.png"
  ),
  plot = g,
  width = 400,
  height = 500,
  units = "mm",
  bg = bg_col
)
```

### Savings the thumbnail for the webpage

```{r}
#| label: save-image

# Saving a thumbnail

library(magick)

# Saving a thumbnail for the webpage
image_read(here::here("data_vizs", 
                      "tidy_billboard_hot_100.png")) |> 
  image_resize(geometry = "x400") |> 
  image_write(
    here::here(
      "data_vizs", 
      "thumbnails", 
      "tidy_billboard_hot_100.png"
    )
  )

```

### Session Info

```{r}
#| label: tbl-session-info
#| tbl-cap: "R Packages and their versions used in the creation of this page and graphics"
#| eval: true

pacman::p_load(
  tidyverse,            # All things tidy
  
  scales,               # Nice Scales for ggplot2
  fontawesome,          # Icons display in ggplot2
  ggtext,               # Markdown text support for ggplot2
  showtext,             # Display fonts in ggplot2
  colorspace,           # Lighten and Darken colours

  patchwork             # Composing Plots
)

sessioninfo::session_info()$packages |> 
  as_tibble() |> 
  dplyr::select(package, 
         version = loadedversion, 
         date, source) |> 
  dplyr::arrange(package) |> 
  janitor::clean_names(
    case = "title"
  ) |> 
  gt::gt() |> 
  gt::opt_interactive(
    use_search = TRUE
  ) |> 
  gtExtras::gt_theme_espn()
```
