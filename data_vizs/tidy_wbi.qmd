---
title: "Worldwide Bureaucracy Indicators"
author: "Aditya Dahiya"
date: "last-modified"
subtitle: ".............................."
categories:
  - "#TidyTuesday"
  - "Governance"
image: "tidy_wbi.png"
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
execute: 
  error: false
  message: false
  warning: false
  eval: false
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/session_presentations/data_vizs.html"
  twitter: true
  linkedin: true
  email: true
  mastodon: true
---

# All the places (Work in-progress)

This week at [#TidyTuesday](https://github.com/rfordatascience/tidytuesday/tree/master?tab=readme-ov-file), we're examining the Worldwide Bureaucracy Indicators (WWBI) dataset provided by the World Bank.

The WWBI database offers a comprehensive cross-national dataset on public sector employment and wages. Its goal is to bridge an information gap, aiding researchers, development practitioners, and policymakers in gaining a deeper insight into various aspects such as the personnel dimensions of state capability, the public sector's role within the labor market, and the fiscal implications of the public sector wage bill. The dataset is compiled from administrative data and household surveys, complementing existing expert perception-based approaches.

![](tidy_wbi.png){width="600"}

### **How I made this graphic?**

Loading required libraries, data import & creating custom functions

```{r}
#| label: setup

# Data Import and Wrangling Tools
library(tidyverse)            # All things tidy
library(janitor)              # Cleaning names etc.

# Final plot tools
library(scales)               # Nice Scales for ggplot2
library(fontawesome)          # Icons display in ggplot2
library(ggtext)               # Markdown text support for ggplot2
library(showtext)             # Display fonts in ggplot2
library(colorspace)           # Lighten and Darken colours
library(patchwork)            # Combining plots

# library(ggfx)                 # Outer glow in the map
# library(magick)               # Adding images to plot
# library(ggthemes)             # Themes for ggplot2
# 
# # Mapping tools
# library(rnaturalearth)        # Maps of the World   
# library(sf)                   # All spatial objects in R
# library(geojsonio)            # To read geojson files into R

# Load Data
wwbi_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-30/wwbi_data.csv')
wwbi_series <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-30/wwbi_series.csv')
wwbi_country <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-30/wwbi_country.csv')
```

Exploratory Data Analysis

```{r}
selected_indicator <- wwbi_series |> 
  filter(str_detect(indicator_name, "Pay compression ratio in public sector, by occupation: Hospital doctor")) |> 
  select(indicator_code) |> 
  pull(indicator_code)

df <- wwbi_data |>
  filter(indicator_code == selected_indicator) |> 
  left_join(
    wwbi_country |> 
      select(country_code, 
             short_name, 
             code2 = x2_alpha_code,
             region,
             income_group) |> 
      mutate(code2 = str_to_lower(code2))
  ) |> 
  left_join(wwbi_series) |> 
  select(-indicator_code)
```

Visualization Parameters

```{r}
#| label: viz-params


# Font for titles
font_add_google("Sansita",
  family = "title_font"
) 

# Font for the caption
font_add_google("Saira Extra Condensed",
  family = "caption_font"
) 

# Font for plot text
font_add_google("Amita",
  family = "body_font"
) 

showtext_auto()

# Background Colour
bg_col <- "white"

# Colour for the text
text_col <- "grey25" 

# Colour for highlighted text
text_hil <- "grey35" 

# Define Base Text Size
ts <- 40 

# Caption stuff for the plot
sysfonts::font_add(
  family = "Font Awesome 6 Brands",
  regular = here::here("docs", "Font Awesome 6 Brands-Regular-400.otf")
)
github <- "&#xf09b"
github_username <- "aditya-dahiya"
xtwitter <- "&#xe61b"
xtwitter_username <- "@adityadahiyaias"
social_caption_1 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{github};</span> <span style='color: {text_hil}'>{github_username}  </span>")
social_caption_2 <- glue::glue("<span style='font-family:\"Font Awesome 6 Brands\";'>{xtwitter};</span> <span style='color: {text_hil}'>{xtwitter_username}</span>")
```

Annotation Text for the Plot

```{r}
#| label: text-for-plot

plot_title <- glue::glue("Indian Store locations: <b style='color:{col_bb}'>Blackberrys</b> vs. <b style='color:{col_rc}'>Ramraj Cotton</b>")

plot_caption <- paste0(
  "**Data:** alltheplaces", 
  " |  **Code:** ", 
  social_caption_1, 
  " |  **Graphics:** ", 
  social_caption_2
  )

plot_subtitle <- glue::glue("A comparison between <b style='color:{col_bb}'>Blackberrys'</b> stores (mostly located in northern India), and <br><b style='color:{col_rc}'>Ramraj Cotton</b> stores (predominantly located in the Southern States) shows the <br>preferences of consumers, and perhaps can be attributed to year-long hot <br>weather in Southern India. Store locations webscraped at <i style='color:{text_hil}'>www.alltheplaces.xyz</i>")
```

The Plot / Graphic

```{r}
#| label: map-of-india

g_base

# List of countries with flags in ggflags
flag_cons <- ggflags::lflags |> names()

# Only the relevant countries are filtered
df |> filter(!is.na(income_group)) |> 
  filter(country %in% flag_cons)


g <- ggplot(
  data = df |> filter(!is.na(income_group)),
  mapping = aes(
    x = value,
    y = income_group,
    colour = income_group)
) +
  geom_point(
    size = 8,
    pch = 1,
    stroke = 2,
    position = position_beeswarm(
      cex = 2.5,
      method = "hex",
      priority = "density",
      corral = "omit",
      corral.width = 1.2
    )
  ) +
  labs(
    x = "",
    y = NULL
  ) +
  theme_minimal(
    base_family = "caption_font",
    base_size = ts
  ) +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    legend.position = "none"
  )

#   geom_text(
#     aes(
#       label = paste0(short_name, "/n", value),
#       position = position_beeswarm(
#         cex = 3,
#         method = "hex",
#         priority = "density",
#         corral = "omit",
#         corral.width = 1.2
#       )
#     )
#   )
#   
#   
#   geom_flag(
#     mapping = aes(country = code2),
#     size = 4,
#     # pch = 1,
#     position = position_beeswarm(
#       cex = 3,
#       method = "hex",
#       priority = "density",
#       corral = "omit",
#       corral.width = 1.2
#     )
#   )
# 
#   
#   
# 
# 
# # An example label in markdown: Not to use for now
# label = glue::glue("<span style='font-size:9pt; color:black'>{short_name}</span><br><span style='color:{text_col}'>{value}</span>")

```

Add-on maps, insets and annotations

```{r}
#| label: insets

inset1
```

Compiling Plots with Patchwork

```{r}
#| label: patchwork
  
g <- g_base + 
  
  # Add inset to the plot
  inset_element(
    p = inset1, 
    left = -0.3, 
    right = 0.22,
    bottom = 0.01,
    top = 0.5, 
    align_to = "plot"
  ) +
  
  # Basix Plot Annotations
  plot_annotation(
    theme = theme(
      plot.background = element_rect(
        fill = bg_col, 
        colour = NA, linewidth = 0
      )
    )
  )

```

Savings the graphics

```{r}
#| label: save-image

ggsave(
  filename = here::here("data_vizs", "tidy_wbi.png"),
  plot = g,
  width = 400,    # Best Twitter Aspect Ratio = 4:5
  height = 500,   
  units = "mm",
  bg = "white"
)
```
