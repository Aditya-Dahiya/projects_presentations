{
  "hash": "0cecce454bbde87e8a1e35b9d31a1802",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Some ingights on the World Population (1960-2023)\"\nauthor: \"Aditya Dahiya\"\ndate: \"2024-05-20\"\nsubtitle: \"Charts and Visualizations on the Population of different regions using World Bank Data\"\ncategories:\n  - \"Interactive\"\n  - \"Data Visualization\"\n  - \"Animation\"\nimage: \"world_population_animated_donut.gif\"\nformat:\n  html:\n    code-fold: true\neditor_options: \n  chunk_output_type: console\nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: false\nfilters:\n  - social-share\nshare:\n  permalink: \"https://aditya-dahiya.github.io/session_presentations/projects/world_population_animated_donut.html\"\n  twitter: true\n  linkedin: true\n  email: true\n  mastodon: true\n---\n\n\n# Share of different regions in the total world population, from 1960 to 2023\n\nGlobal population distribution, visualized through an animated donut chart. Using midyear estimates from the [World Bank](https://databank.worldbank.org/) [DataBank](https://data.worldbank.org/indicator/SP.POP.TOTL) and inspired by the compelling [visual style](https://x.com/VisualCap/status/1788403705873674494?s=03) of J[ames Eagle](https://x.com/JamesEagle17)'s [analysis on internet browser popularity](https://www.visualcapitalist.com/cp/the-rise-and-fall-of-popular-web-browsers-since-1994/), this chart illustrates the percentage share of the total world population across seven distinct regions: East Asia & Pacific, Middle East & North Africa, Europe & Central Asia, South Asia, Latin America & Caribbean, Sub-Saharan Africa, and North America. This engaging animation provides a dynamic perspective on demographic trends, reflecting data sourced from the United Nations Population Division, national statistical offices, and other reputable agencies. It shows how the world's population is distributed and how these regions contribute to the global demographic landscape.\n\n![Animated Donut (Pie) Chart of the population-share of 7 different regions in the World's Total Population. Notice the rising share of South Asia and Africa, and the falling share of the western world.](world_population_animated_donut.gif)\n\n### **How I made this graphic?**\n\nLoading required libraries and data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Import and Wrangling Tools\nlibrary(tidyverse)            # All things tidy\nlibrary(janitor)              # Cleaning names etc.\nlibrary(wbstats)              # Fetching World Bank Data\n\n# Final plot tools\nlibrary(scales)               # Nice Scales for ggplot2\nlibrary(fontawesome)          # Icons display in ggplot2\nlibrary(ggtext)               # Markdown text support for ggplot2\nlibrary(showtext)             # Display fonts in ggplot2\nlibrary(gganimate)            # For animation\n\n\nrawdf <- wb_data(\n  indicator = \"SP.POP.TOTL\",\n  country = \"regions_only\",\n  start_date = 1960,\n  end_date = 2023,\n  return_wide = FALSE,\n  gapfill = TRUE,\n  mrv = 65\n) |> \n  select(\n    region = country,\n    year = date,\n    population = value\n  ) \n\nregion_levels <- c(\n  \"South Asia\",\n  \"Sub-Saharan Africa\",\n  \"Latin America & Caribbean\",\n  \"Middle East & North Africa\",\n  \"East Asia & Pacific\",\n  \"Europe & Central Asia\",\n  \"North America\"\n)\n```\n:::\n\n\nVisualization Parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Font for titles\nfont_add_google(\"Dosis\",\n  family = \"title_font\"\n) \n\n# Font for the caption\nfont_add_google(\"Saira Extra Condensed\",\n  family = \"caption_font\"\n) \n\n# Font for plot text\nfont_add_google(\"Saira Semi Condensed\",\n  family = \"body_font\"\n) \n\nshowtext_auto()\n\n# Colour Palette\nmypal <- paletteer::paletteer_d(\"feathers::bee_eater\")\nmypal <- paletteer::paletteer_d(\"futurevisions::grand_tour\")\nmypal_fill <- paletteer::paletteer_d(\"ghibli::PonyoLight\")\nmypal_medium <- paletteer::paletteer_d(\"ghibli::PonyoMedium\")\nmypal_col <- paletteer::paletteer_d(\"ghibli::PonyoDark\")\n\n# Background Colour\nbg_col <- \"white\"\n\n# Colour for the text\ntext_col <- \"grey20\"\n\n# Colour for highlighted text\ntext_hil <- \"grey30\" \n```\n:::\n\n\nAnnotation Text for the Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_title <- \"Global Population Distribution\"\n\nplot_subtitle <- \"(1960 to 2023)\"\n\nplot_caption <- \"Data: World Bank.  |   Graphics: @adityadahiyaias on X\"\n```\n:::\n\n\nData Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- rawdf |> \n  group_by(year) |> \n  mutate(percentage = population / sum(population)) |> \n  mutate(region = fct(region, levels = region_levels)) |> \n  ungroup() |> \n  mutate(print_pop = number(population, \n                            accuracy = 0.01,\n                            scale_cut = cut_short_scale())) |> \n  group_by(year) |> \n  mutate(totalpop = sum(population)) |> \n  ungroup()\n```\n:::\n\n\nThe static plot & animating it\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- df |> \n  ggplot(\n    aes(\n      x = 1,\n      y = percentage,\n      fill = region,\n      group = region\n    )\n  ) + \n  geom_col(\n    colour = \"white\",\n    position = position_stack()\n  ) +\n  \n  # Text in the plot / animation\n  geom_text(\n    mapping = aes(\n      label = paste0(\n        round(100*percentage, 0),\n        \"%\"\n        ),\n      colour = region),\n    position = position_stack(vjust = 0.5),\n    family = \"body_font\",\n    fontface = \"bold\",\n    size = 6\n  ) +\n  geom_text(\n    mapping = aes(\n      label = paste0(\n        str_wrap(region, 15),\n        \"\\n\",\n        print_pop\n        ),\n      x = 1.6,\n      colour = region\n    ),\n    position = position_stack(vjust = 0.5),\n    hjust = \"outward\",\n    lineheight = 1,\n    family = \"body_font\",\n    size = 3\n  ) +\n  \n  # Central Year Annotation\n  geom_text(\n    aes(\n      label = as.factor(year),\n      x = -0.4,\n      y = 0\n    ),\n    size = 10,\n    family = \"title_font\",\n    colour = text_hil\n  ) +\n  \n  geom_text(\n    aes(\n      label = paste0(\"Total: \", round(totalpop / 1e9, 1), \" Billion\"),\n      x = -0.8,\n      y = 0\n    ),\n    size = 5,\n    family = \"title_font\",\n    colour = text_hil\n  ) +\n  \n  # Scales\n  scale_y_continuous(expand = expansion(0)) +\n  scale_x_continuous(\n    limits = c(-0.8, 2)\n  ) +\n  scale_fill_manual(values = mypal_fill) +\n  scale_colour_manual(values = mypal_col) +\n  labs(\n    title = plot_title,\n    caption = plot_caption,\n    subtitle = plot_subtitle\n  ) +\n  coord_polar(theta = \"y\") +\n  theme_minimal(\n    base_family = \"body_font\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    panel.grid = element_blank(),\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    plot.title = element_text(\n      hjust = 0.5, \n      family = \"title_font\",\n      colour = text_hil,\n      margin = margin(0,0,0,0),\n      size = 30,\n      face = \"bold\"\n    ),\n    plot.subtitle = element_text(\n      margin = margin(0,0,0,0),\n      colour = text_hil,\n      family = \"title_font\",\n      hjust = 0.5,\n      size = 15\n    ),\n    plot.caption = element_text(\n      hjust = 0.5,\n      family = \"caption_font\",\n      colour = text_hil,\n      margin = margin(0,0,0,0)\n    )\n  )\n\n\ng_anim <- g +\n  transition_states(year) +\n  ease_aes(\"linear\")\n```\n:::\n\n\nSavings the animation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanim_save(\n  filename = here::here(\n    \"projects\", \n    \"world_population_animated_donut.gif\"\n    ),\n  animation = g_anim,\n  fps = 5,\n  duration = 20,\n  start_pause = 3,\n  end_pause = 10,\n  height = 500,\n  width = 480\n)\n```\n:::\n\n\n## Yearly population changes\n\n![This graphic depicts the yearly percentage changes in population for various countries from 1961 to 2023, highlighting significant increases due to immigration and sharp declines resulting from war and natural disasters.](/data_vizs/a4_world_population_change.png){width=\"900\"}\n\nThe data used for these line charts is sourced from the World Bank DataBank, which compiles midyear population estimates based on the de facto definition of population, encompassing all residents regardless of legal status or citizenship. This data, spanning from 1961 to 2023, includes inputs from various reputable sources such as the United Nations Population Division, national statistical offices, Eurostat, and the U.S. Census Bureau. The graphic illustrates the yearly percentage changes in population for different countries, highlighting significant demographic shifts. The analysis reveals notable population increases in countries like the UAE (1969-1977, 2007-2008) and Qatar (2006-2008), likely driven by immigration. Conversely, the charts emphasize sharp population declines due to war or natural disasters in countries such as Lebanon (1978-79), Afghanistan (1981-82), Kuwait (1990-91), Rwanda (1994-95), Kosovo (1998-1999), Syria (2013-2014), Libya (2012), and Ukraine (2022). These trends provide a stark visualization of how political instability, conflict, and crises can dramatically impact population dynamics.\n\n### How I made this graphic?\n\nSetting Parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Font for titles\nfont_add_google(\"Dosis\",\n  family = \"title_font\"\n) \n\n# Font for the caption\nfont_add_google(\"Saira Extra Condensed\",\n  family = \"caption_font\"\n) \n\n# Font for plot text\nfont_add_google(\"Saira Semi Condensed\",\n  family = \"body_font\"\n) \n\ntext_col <- \"grey20\"\n\ntext_hil <- \"grey30\"\n\nmypal <- paletteer::paletteer_d(\"ggthemes::Hue_Circle\")\n\nshowtext_auto()\n\nbg_col <- \"white\"\n\n# Caption stuff for the plot\nsysfonts::font_add(\n  family = \"Font Awesome 6 Brands\",\n  regular = here::here(\"docs\", \"Font Awesome 6 Brands-Regular-400.otf\")\n)\ngithub <- \"&#xf09b\"\ngithub_username <- \"aditya-dahiya\"\nxtwitter <- \"&#xe61b\"\nxtwitter_username <- \"@adityadahiyaias\"\nsocial_caption_1 <- glue::glue(\"<span style='font-family:\\\"Font Awesome 6 Brands\\\";'>{github};</span> <span style='color: {text_col}'>{github_username}  </span>\")\nsocial_caption_2 <- glue::glue(\"<span style='font-family:\\\"Font Awesome 6 Brands\\\";'>{xtwitter};</span> <span style='color: {text_col}'>{xtwitter_username}</span>\")\n\nts = 80\n\nplot_title <- \"Global Population Trends: Surges and Declines (1961-2023)\"\n\nplot_subtitle <- glue::glue(\"The line charts highlight important demographic changes, with rapid population increases in the <b style='color:{mypal[16]}'>UAE</b> (1969-1977,<br>2007-2008) and <b style='color:{mypal[11]}'>Qatar</b> (2006-2008), likely due to immigration. In contrast, marked population declines are observed in<br>countries like <b style='color:{mypal[8]}'>Lebanon </b> (1978-79), <b style='color:{mypal[1]}'>Afghanistan </b> (1981-82), <b style='color:{mypal[7]}'>Kuwait  </b>(1990-91), <b style='color:{mypal[12]}'>Rwanda </b>(1994-95), <b style='color:{mypal[6]}'>Kosovo </b>(1998-1999),<br><b style='color:{mypal[14]}'>Syria</b> (2013-2014), <b style='color:{mypal[10]}'>Libya </b>(2012), and <b style='color:{mypal[15]}'>Ukraine </b>(2022), primarily resulting from wars. These patterns highlight the profound<br>impact of socio-political and environmental factors on population dynamics.\")\n\nstr_view(plot_subtitle)\n\nplot_caption <- paste0(\n  \"**Data:** World Bank Databank. |  \",\n  \"**Code:** \", \n  social_caption_1, \n  \" |  **Graphics:** \", \n  social_caption_2\n  )\n\ninset_text <- \"About the data: The data for these line charts is derived from the World Bank DataBank, specifically the dataset on total population (ID: SP.POP.TOTL). This dataset is based on the de facto definition of population, counting all residents regardless of legal status or citizenship, and provides midyear estimates. The primary sources include the United Nations Population Division's World Population Prospects (2022 Revision), census reports, statistical publications from national statistical offices, Eurostat's demographic statistics, the United Nations Statistical Division's Population and Vital Statistics Report, the U.S. Census Bureau's International Database, and the Secretariat of the Pacific Community's Statistics and Demography Programme. These comprehensive and reputable sources ensure the reliability and accuracy of the population data presented in the charts.\"\n\nggplot() +\n  labs(subtitle = plot_subtitle) +\n  theme(plot.subtitle = element_markdown())\n```\n:::\n\n\nData Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrawdf2 <- wb_data(\n  indicator = \"SP.POP.TOTL\",\n  start_date = 1960,\n  end_date = 2023,\n  return_wide = FALSE,\n  gapfill = TRUE,\n  mrv = 65\n)\n\nhigh_pop_countries <- rawdf2 |> \n  filter(date == 2022) |> \n  filter(value > 1e5) |> \n  pull(country)\n\n\ndf <- rawdf2 |> \n  select(\n    country, year = date,\n    value, iso2c\n  ) |> \n  mutate(iso2c = str_to_lower(iso2c)) |>\n  group_by(country) |> \n  mutate(increase = 100*(value - lead(value))/value) |> \n  mutate(disp_val = (increase > 13 | increase < -5)) |> \n  filter(country %in% high_pop_countries) |> \n  mutate(country = fct(country))\n\ndf |> \n  filter(disp_val) |> \n  distinct(country)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng_base <- df |> \n  ggplot(aes(x = year, \n             y = increase,\n             group = country)) +\n  geom_line(colour = \"grey10\", alpha = 0.2) +\n  geom_point(\n    data = df |> filter(disp_val),\n    mapping = aes(colour = country),\n    size = 3, \n    alpha = 0.5\n  ) +\n  ggrepel::geom_text_repel(\n    data = df |> filter(disp_val),\n    mapping = aes(\n      label = paste0(country, \"\\n(\", round(increase, 1), \"%,\", year, \")\"),\n      colour = country\n    ),\n    lineheight = 0.3,\n    family = \"body_font\",\n    size = ts / 4\n  ) +\n  geom_hline(yintercept = 0, colour = text_hil, linewidth = 1) +\n  annotate(\n    geom = \"label\",\n    x = 1962,\n    y = -8,\n    hjust = 0, \n    vjust = 1,\n    label = str_wrap(inset_text, 60),\n    colour = text_hil,\n    fill = bg_col,\n    lineheight = 0.35,\n    size = ts / 7,\n    family = \"caption_font\",\n    label.size = NA\n  ) +\n  annotate(\n    geom = \"label\",\n    x = 2010, \n    y = -25,\n    label = \"Name of the Country\\n(% Population Change, Year)\",\n    family = \"body_font\",\n    fontface = \"bold\",\n    colour = mypal[1],\n    lineheight = 0.3,\n    size = ts / 3,\n    fill = bg_col,\n    hjust = 0.5,\n    vjust = 0.5,\n    label.padding = unit(0.15, \"lines\")\n  ) +\n  scale_x_continuous(\n    expand = expansion(0), \n    breaks = seq(1960, 2020, 10),\n    limits = c(1961, 2023)\n  ) +\n  scale_y_continuous(\n    labels = label_number(suffix = \"%\")\n  ) +\n  scale_colour_manual(values = mypal) +\n  labs(\n    x = NULL, y = \"Yearly population change (%)\",\n    title = plot_title,\n    subtitle = plot_subtitle,\n    caption = plot_caption\n  ) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal(\n    base_family = \"body_font\",\n    base_size = ts\n  ) +\n  theme(\n    legend.position = \"none\",\n    axis.line.y = element_line(\n      arrow = arrow(ends = \"both\", length = unit(10, \"mm\")),\n      linewidth = 1,\n      colour = text_hil\n    ),\n    panel.grid.major.y = element_line(\n      colour = \"grey90\",\n      linewidth = 0.5\n    ),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    plot.title = element_text(\n      hjust = 0,\n      family = \"title_font\",\n      size = 2.5 * ts,\n      colour = text_hil,\n      margin = margin(10, 0, 3,0, \"mm\")\n    ),\n    plot.subtitle = element_markdown(\n      lineheight = 0.35,\n      hjust = 0,\n      colour = text_col,\n      margin = margin(0,0,5,0, \"mm\")\n    ),\n    plot.caption = element_textbox(\n      hjust = 0.5,\n      family = \"caption_font\",\n      colour = text_hil\n    ),\n    plot.background = element_rect(\n      fill = bg_col,\n      colour = bg_col\n    ),\n    axis.title.y = element_text(margin = margin(0,0,0,5, \"mm\"), colour = text_col),\n    axis.text.y = element_text(\n      margin = margin(0,0,0,0, \"mm\"), \n      colour = text_col,\n      size = 1.2 * ts),\n    axis.text.x = element_text(\n      margin = margin(0,0,0,0, \"mm\"), \n      colour = text_col,\n      size = 1.1 * ts),\n    axis.ticks.y = element_blank()\n  ) \n\n# QR Code for the plot\nurl_graphics <- paste0(\n  \"https://aditya-dahiya.github.io/projects_presentations/projects/\",\n  # The file name of the current .qmd file\n  \"world_population_animated_donut\",         \n  \".html\"\n)\n# remotes::install_github('coolbutuseless/ggqr')\n# library(ggqr)\nplot_qr <- ggplot(\n  data = NULL, \n  aes(x = 0, y = 0, label = url_graphics)\n  ) + \n  ggqr::geom_qr(\n    colour = text_hil, \n    fill = bg_col,\n    size = 1.9\n    ) +\n  coord_fixed() +\n  theme_void() +\n  theme(plot.background = element_rect(\n    fill = NA, \n    colour = NA\n    )\n  )\n\nlibrary(patchwork)\ng <- g_base +\n  # Add QR Code to the plot\n  inset_element(\n    p = plot_qr, \n    left = 0.85, \n    right = 1,\n    bottom = 0.75,\n    top = 0.90, \n    align_to = \"full\",\n    clip = FALSE\n  ) +\n  \n  # Basix Plot Annotations\n  plot_annotation(\n    theme = theme(\n      plot.background = element_rect(\n        fill = bg_col, \n        colour = NA, \n        linewidth = 0\n      )\n    )\n  )\n\nggsave(\n  plot = g,\n  filename = here::here(\"data_vizs\", \"a4_world_population_change.png\"),\n  height = 210 * 2,\n  width = 297 * 2,\n  units = \"mm\"\n)\n```\n:::\n\n\n# Decade by Decade: The World’s Population Story\n\n![This bee-swarm scatterplot illustrates decadal population changes by country from 1960s to 2020s, showcasing the percentage growth or decline for each decade. It reveals rapid population expansions in Gulf countries during economic booms and notable declines in war-torn and Eastern European nations, with color-coded dots representing different continents. The plot underscores the increasing growth rates in Sub-Saharan Africa and the stagnation or decline in Europe and Latin America.](/data_vizs/a4_wb_decade_population.png)\n\nThe graphic is a beeswarm scatterplot illustrating the decadal population changes for each country from 1960 to 2020, based on data sourced from the official World Bank databank. This data, encompassing total population figures derived from midyear estimates, adheres to the de facto population definition, counting all residents irrespective of legal status or citizenship. The data originates from multiple reputable sources, including the United Nations Population Division, various national statistical offices, Eurostat, the U.S. Census Bureau, and the Secretariat of the Pacific Community. In the scatterplot, each column corresponds to a decade, with the y-axis representing the percentage change in population. Each dot signifies a country, color-coded by continent according to World Bank regions, effectively illustrating regional demographic trends over time. The plot also highlights and labels the most significant outliers, showcasing the three countries with the highest population increases and the two countries with the most substantial decreases for each decade, providing a clear visual representation of extreme demographic shifts across different periods.\n\n### How I made this graphic?\n\nLoad libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Import and Wrangling Tools\nlibrary(tidyverse)            # All things tidy\nlibrary(janitor)              # Cleaning names etc.\nlibrary(wbstats)              # Fetching World Bank Data\n\n# Final plot tools\nlibrary(scales)               # Nice Scales for ggplot2\nlibrary(fontawesome)          # Icons display in ggplot2\nlibrary(ggtext)               # Markdown text support for ggplot2\nlibrary(showtext)             # Display fonts in ggplot2\nlibrary(gganimate)            # For animation\n```\n:::\n\n\nData Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrawdf2 <- wb_data(\n  indicator = \"SP.POP.TOTL\",\n  start_date = 1960,\n  end_date = 2023,\n  return_wide = FALSE,\n  gapfill = TRUE,\n  mrv = 65\n)\n\nregion_levels <- c(\n  \"East Asia & Pacific\",\n  \"Europe & Central Asia\",\n  \"Sub-Saharan Africa\",\n  \"Latin America & Caribbean\",\n  \"South Asia\",\n  \"Middle East & North Africa\",\n  \"North America\"\n)\n```\n:::\n\n\nLinking Countries to Regions / Continents\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(wbstats)\n\nlink_regions <- wbstats::wb_countries() |> \n  select(iso2c, region) |> \n  mutate(iso2c = str_to_lower(iso2c))\n```\n:::\n\n\nVisualization Parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Font for titles\nfont_add_google(\"Dosis\",\n  family = \"title_font\"\n) \n\n# Font for the caption\nfont_add_google(\"Saira Extra Condensed\",\n  family = \"caption_font\"\n) \n\n# Font for plot text\nfont_add_google(\"Saira Semi Condensed\",\n  family = \"body_font\"\n) \n\nshowtext_auto()\n\n# Background Colour\nbg_col <- \"white\"\ntext_col <- \"grey15\"\ntext_hil <- \"grey30\"\n\nmypal <- paletteer::paletteer_d(\"nbapalettes::nuggets_city2\")\n\n# Base Text Size\nbts <- 20\n```\n:::\n\n\nExploratory Data Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf3 <- rawdf2 |> \n  select(country, iso2c, year = date, value) |> \n  mutate(iso2c = str_to_lower(iso2c)) |> \n  drop_na()\n\n# Not plotting very small territories with population below 750,000\nnot_plot <- df3 |> \n  filter(year == 2022) |> \n  filter(value < 7.5e5) |> \n  pull(iso2c)\n\n# A treemap to show how many coutnries lie within population of some\n# of the most populous countries\n\n# countries_to_visualize <- df3 |> \n#   filter(year == 2022) |> \n#   slice_max(order_by = value, n = 10) |> \n#   pull(iso2c)\n# \n# too_small_countries <- df3 |> \n#   filter(year == 2022) |> \n#   filter(value < 1e5) |> \n#   pull(country)\n# \n# df3 |> \n#   mutate(\n#     country = if_else(\n#       iso2c %in% countries_to_visualize,\n#       country,\n#       \"Others\"\n#     )\n#   ) |> \n#   group_by(year, country) |> \n#   summarize(value = sum(value, na.rm = TRUE)) |> \n#   ungroup() |> \n#   ggplot(aes(x = year, y = value, fill = country, group = country)) +\n#   ggstream::geom_stream(type = \"proportional\", colour = \"white\")\n# \n# \n# df3 |> \n#   visdat::vis_miss()\n# \n# big_country <- \"India\"\n# view_year <- 2023\n# \n# total_pop_to_fill <- df3 |> \n#   filter(year == view_year & country == big_country) |> \n#   pull(value)\n# \n# plotdf3 <- df3 |> \n#   filter(year == view_year) |> \n#   arrange(value) |> \n#   mutate(cumsum_value = cumsum(value)) |> \n#   filter(cumsum_value <= total_pop_to_fill)\n#   \n# plotdf3 |> \n#   ggplot(aes(area = value, fill = country)) +\n#   treemapify::geom_treemap(colour = \"white\") +\n#   labs(\n#     title = paste0(\"The scale of \", big_country, \"'s population\"),\n#     subtitle = paste0(\"Population of \", \n#                       big_country, \n#                       \" in \", view_year, \": \",\n#                       number(total_pop_to_fill, big.mark = \",\"),\n#                       \"\\n\",\n#                       nrow(plotdf3), \n#                       \" countries combined have lower population than \", \n#                       big_country)\n#   ) +\n#   theme_void() +\n#   theme(\n#     legend.position = \"none\",\n#     plot.title = element_text(hjust = 0.5)\n#   )\n\n\n\n# A new thought stream - decadal population rise\ndecade_levels <- c(\n  \"rise_overall\",\n  \"rise60s\",\n  \"rise70s\",\n  \"rise80s\",\n  \"rise90s\",\n  \"rise00s\",\n  \"rise10s\"\n)\n\n# Decade wise population rise in each country\ndecade_df <- df3 |> \n  filter(!(iso2c %in% not_plot)) |> \n  mutate(year = paste0(\"y_\", year)) |> \n  pivot_wider(\n    id_cols = c(country, iso2c),\n    names_from = year,\n    values_from = value\n  ) |> \n  mutate(\n    rise_overall = (y_2023 - y_1961)/y_1961,\n    rise60s = (y_1970 - y_1961)/y_1961,\n    rise70s = (y_1980 - y_1971)/y_1971,\n    rise80s = (y_1990 - y_1981)/y_1981,\n    rise90s = (y_2000 - y_1991)/y_1991,\n    rise00s = (y_2010 - y_2000)/y_2000,\n    rise10s = (y_2020 - y_2010)/y_2010\n  ) |> \n  select(country, iso2c, starts_with(\"rise\")) |> \n  pivot_longer(\n    cols = -c(country, iso2c),\n    names_to = \"decade\",\n    values_to = \"value\"\n  ) |> \n  left_join(link_regions) |> \n  mutate(\n    decade = fct(decade, levels = decade_levels),\n    region = fct(region, levels = region_levels)\n  )\n\n# Selecting countries to highlight and annotate in the plot\n# Top 3 high rise countries each decade\nselcon1 <- decade_df |> \n  group_by(decade) |> \n  slice_max(order_by = value, n = 3) |> \n  ungroup()\n\n# Bottom 2 countries in each decade\nselcon2 <- decade_df |> \n  group_by(decade) |> \n  slice_min(order_by = value, n = 2) |> \n  ungroup()\n\n\n# Overall 10 most populous countries\nselcon3 <- rawdf2 |> \n  filter(date == 2022) |> \n  slice_max(order_by = value, n = 10) |> \n  mutate(iso2c = str_to_lower(iso2c)) |> \n  pull(iso2c)\n\nselcons <- bind_rows(\n  selcon1,\n  selcon2\n) |> \n  mutate(to_show_text = \"display\")\n\nplotdf <- decade_df |> \n  left_join(selcons) |> \n  mutate(\n    to_show_text = if_else(\n      is.na(to_show_text),\n      NA,\n      paste0(country, \" (\", \n             number(round(100*value), suffix = \"%\"),\n             \")\")\n    )\n  )\n\n# Decadal rise overall for the world\noverall_decade_df <- df3 |> \n  group_by(year) |> \n  summarise(total_pop = sum(value, na.rm = T)) |> \n  mutate(\n    country = \"World\",\n    year = paste0(\"y_\", year),\n    \n  ) |> \n  pivot_wider(\n    id_cols = country,\n    values_from = total_pop,\n    names_from = year\n  ) |> \n  mutate(\n    rise60s = (y_1970 - y_1961)/y_1961,\n    rise70s = (y_1980 - y_1971)/y_1971,\n    rise80s = (y_1990 - y_1981)/y_1981,\n    rise90s = (y_2000 - y_1991)/y_1991,\n    rise00s = (y_2010 - y_2000)/y_2000,\n    rise10s = (y_2020 - y_2010)/y_2010,\n    .keep = \"none\"\n  ) |> \n  pivot_longer(\n    cols = everything(),\n    names_to = \"decade\",\n    values_to = \"value\"\n  ) |> \n  mutate(decade = fct(decade, levels = decade_levels))\n```\n:::\n\n\nPlot text annotations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_title <- \"Rising and Falling: Nations' Population in past 6 Decades\"\n\nplot_subtitle <- str_wrap(\"The beeswarm scatterplot of decadal population growth reveals that Gulf countries experienced the most rapid population expansions during the oil booms of the 1960s, 1970s, and economic boom of the 2000s. Population declines predominantly occurred in war-torn regions like Afghanistan (1980s) and Cambodia (1970s), with sharp declines also noted in Eastern Europe in the 2000s and 2010s, particularly in Bosnia Herzegovina, Latvia, and Lithuania. Additionally, Sub-Saharan African countries are showing increasing decadal population growth rates, while Europe and Latin American countries are experiencing stagnation or decline, often falling below the 0% growth line.\", 170)\n\ntext1_annotate <- str_wrap(\"The population surges in the UAE, Qatar, and Kuwait during the 1960s, 1970s, and 2000s were driven primarily by the discovery and exploitation of vast oil reserves, leading to rapid economic growth and significant infrastructure development. This economic boom attracted a large influx of foreign workers and expatriates to support the burgeoning industries.\", 40)\n\ntext2_annotate <- str_wrap(\"About the Data: The data for the plot is sourced from the official World Bank databank, encompassing total population figures from 1960 to 2023. These midyear estimates are based on the de facto definition of population, counting all residents regardless of legal status or citizenship. The data is compiled from multiple reputable sources, including the United Nations Population Division, national statistical offices, Eurostat, the U.S. Census Bureau, and the Secretariat of the Pacific Community, ensuring comprehensive and reliable demographic information.\", 50)\n\n# Caption stuff for the plot\nsysfonts::font_add(\n  family = \"Font Awesome 6 Brands\",\n  regular = here::here(\"docs\", \"Font Awesome 6 Brands-Regular-400.otf\")\n)\ngithub <- \"&#xf09b\"\ngithub_username <- \"aditya-dahiya\"\nxtwitter <- \"&#xe61b\"\nxtwitter_username <- \"@adityadahiyaias\"\nsocial_caption_1 <- glue::glue(\"<span style='font-family:\\\"Font Awesome 6 Brands\\\";'>{github};</span> <span style='color: {text_col}'>{github_username}  </span>\")\nsocial_caption_2 <- glue::glue(\"<span style='font-family:\\\"Font Awesome 6 Brands\\\";'>{xtwitter};</span> <span style='color: {text_col}'>{xtwitter_username}</span>\")\n\n\nplot_caption <- paste0(\n  \"**Data:** World Bank Databank. |  \",\n  \"**Code:** \", \n  social_caption_1, \n  \" |  **Graphics:** \", \n  social_caption_2\n  )\n```\n:::\n\n\nThe actual base plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng_base <- plotdf |> \n  filter(decade != \"rise_overall\") |> \n  ggplot(\n    mapping = aes(\n      x = decade,\n      y = value,\n      label = country,\n      colour = region\n    )\n  ) +\n  \n  # Beeswarm of the plot\n  geom_point(\n    pch = 19,\n    alpha = 1,\n    size = 5, \n    position = ggbeeswarm::position_beeswarm(\n      method = \"hex\",\n      cex = 2,\n      corral.width = 0.9,\n      corral = \"wrap\"\n    )\n  ) +\n  # Displaying text country names\n  ggrepel::geom_text_repel(\n    mapping = aes(label = to_show_text),\n    position = ggbeeswarm::position_beeswarm(\n      method = \"hex\",\n      cex = 2,\n      corral.width = 0.9,\n      corral = \"wrap\"\n    ),\n    lineheight = 0.35,\n    colour = text_hil,\n    hjust = 0,\n    vjust = 0.5,\n    family = \"body_font\",\n    size = bts\n  ) +\n  \n  # Horizontal Line Annotations\n  geom_hline(\n    yintercept = 1,\n    colour = text_hil,\n    linewidth = 0.5,\n    alpha = 0.5\n  ) +\n  annotate(\n    geom = \"text\",\n    label = \"100% rise -- population doubled in the decade\",\n    x = 7,\n    y = 1.02,\n    family = \"caption_font\",\n    colour = text_hil,\n    hjust = 1,\n    vjust = 0,\n    size = bts\n  ) +\n  geom_hline(\n    yintercept = 2,\n    colour = text_hil,\n    linewidth = 0.5,\n    alpha = 0.5\n  ) +\n  annotate(\n    geom = \"text\",\n    label = \"200% rise -- population tripled in the decade\",\n    x = 7,\n    y = 2.02,\n    family = \"caption_font\",\n    colour = text_hil,\n    hjust = 1,\n    vjust = 0,\n    size = bts\n  ) +\n  geom_hline(\n    yintercept = 0,\n    colour = text_hil,\n    linewidth = 0.5,\n    alpha = 0.5\n  ) +\n  annotate(\n    geom = \"text\",\n    label = \"Static Population\",\n    x = 7,\n    y = 0.02,\n    family = \"caption_font\",\n    colour = text_hil,\n    hjust = 1,\n    vjust = 0,\n    size = bts\n  ) +\n  annotate(\n    geom = \"text\",\n    x = 2.5,\n    y = 1.9,\n    label = text2_annotate,\n    colour = text_hil,\n    family = \"caption_font\",\n    size = bts/1.5,\n    lineheight = 0.3,\n    hjust = 0,\n    vjust = 1\n  ) +\n  \n  # Labels\n  labs(\n    y = \"Change in population (%)\",\n    x = NULL,\n    colour = NULL,\n    title = plot_title,\n    subtitle = plot_subtitle,\n    caption = plot_caption\n  ) +\n\n  # Scales and Coordinates\n  scale_color_manual(values = mypal) +\n  scale_y_continuous(\n    labels = label_percent()\n  ) +\n  scale_x_discrete(\n    labels = c(\"1960s\", \"1970s\", \"1980s\", \"1990s\", \"2000s\", \"2010s\"),\n    expand = expansion(c(-0.05, 0.05))\n  ) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal(\n    base_family = \"body_font\",\n    base_size = 4 * bts\n  ) +\n  theme(\n    legend.position = c(0.99, 0.92),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.x = element_blank(),\n    legend.justification = c(1, 1),\n    legend.text = element_text(\n      margin = margin(0,0,0,2, \"mm\"),\n      colour = text_hil,\n      family = \"body_font\",\n      size = 4 * bts\n    ),\n    legend.key.height = unit(10, \"mm\"),\n    plot.title = element_text(\n      size = 10.5 * bts,\n      colour = text_hil,\n      family = \"title_font\",\n      margin = margin(10,0,5,0, \"mm\")\n    ),\n    plot.subtitle = element_text(\n      lineheight = 0.3,\n      colour = text_col,\n      size = 3 * bts,\n      margin = margin(0,0,0,0, \"mm\")\n    ),\n    plot.caption = element_textbox(\n      colour = text_hil,\n      family = \"caption_font\",\n      margin = margin(5,0,0,0, \"mm\"),\n      hjust = 0.5\n    ),\n    panel.grid.major.y = element_line(\n      linewidth = 0.5\n    ),\n    legend.background = element_rect(\n      fill = bg_col,\n      colour = \"transparent\"\n    ),\n    plot.title.position = \"plot\",\n    axis.text.x = element_text(\n      size = 5 * bts,\n      colour = text_col,\n      margin = margin(0,0,0,0, \"mm\")\n    ),\n    axis.text.y = element_text(\n      margin = margin(0,0,0,0, \"mm\")\n    ),\n    axis.title = element_text(\n      colour = text_hil,\n      margin = margin(0,0,0,0, \"mm\")\n    )\n  )\n```\n:::\n\n\nAdd insets and save plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# QR Code for the plot\nurl_graphics <- paste0(\n  \"https://aditya-dahiya.github.io/projects_presentations/projects/\",\n  # The file name of the current .qmd file\n  \"world_population_animated_donut.html#decade-by-decade-the-worlds-population-story\"\n)\n# remotes::install_github('coolbutuseless/ggqr')\n# library(ggqr)\nplot_qr <- ggplot(\n  data = NULL, \n  aes(x = 0, y = 0, label = url_graphics)\n  ) + \n  ggqr::geom_qr(\n    colour = text_hil, \n    fill = bg_col,\n    size = 2\n    ) +\n  coord_fixed() +\n  theme_void() +\n  theme(plot.background = element_rect(\n    fill = NA, \n    colour = NA\n    )\n  )\n\nlibrary(patchwork)\ng <- g_base +\n  inset_element(\n    p = plot_qr,\n    left = 0.85, right = 0.99,\n    top = 0.95, bottom = 0.8,\n    align_to = \"full\"\n  ) +\n  plot_annotation(\n    theme = theme(\n      plot.background = element_rect(\n        fill = \"transparent\",\n        colour = \"transparent\"\n      ),\n      panel.background = element_rect(\n        fill = \"transparent\",\n        colour = \"transparent\"\n      )\n    )\n  )\n\nggsave(\n  filename = here::here(\"data_vizs\", \"a4_wb_decade_population.png\"),\n  plot = g,\n  height = 210 * 2,\n  width = 297 * 2,\n  units = \"mm\",\n  bg = bg_col\n)\n```\n:::\n\n\n# Interactive Graphic on Decadal Population Growth in Countries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Import and Wrangling Tools\nlibrary(tidyverse)            # All things tidy\nlibrary(janitor)              # Cleaning names etc.\nlibrary(wbstats)              # Fetching World Bank Data\n\n# Final plot tools\nlibrary(scales)               # Nice Scales for ggplot2\nlibrary(fontawesome)          # Icons display in ggplot2\nlibrary(ggtext)               # Markdown text support for ggplot2\nlibrary(showtext)             # Display fonts in ggplot2\nlibrary(gganimate)            # For animation\n\n# Loading the data\nrawdf2 <- wb_data(\n  indicator = \"SP.POP.TOTL\",\n  start_date = 1960,\n  end_date = 2023,\n  return_wide = FALSE,\n  gapfill = TRUE,\n  mrv = 65\n)\n\n# Correct Order of regions for plotting in colours\nregion_levels <- c(\n  \"East Asia & Pacific\",\n  \"Europe & Central Asia\",\n  \"Sub-Saharan Africa\",\n  \"Latin America & Caribbean\",\n  \"South Asia\",\n  \"Middle East & North Africa\",\n  \"North America\"\n)\n\n# Regions for the countries\nlink_regions <- wbstats::wb_countries() |> \n  select(iso2c, region) |> \n  mutate(iso2c = str_to_lower(iso2c))\n\n# Font for titles\nfont_add_google(\"Dosis\",\n  family = \"title_font\"\n) \n\n# Font for the caption\nfont_add_google(\"Saira Extra Condensed\",\n  family = \"caption_font\"\n) \n\n# Font for plot text\nfont_add_google(\"Saira Semi Condensed\",\n  family = \"body_font\"\n) \n\nshowtext_auto()\n\n# Background Colour\nbg_col <- \"white\"\ntext_col <- \"grey15\"\ntext_hil <- \"grey30\"\n\nmypal <- paletteer::paletteer_d(\"nbapalettes::nuggets_city2\")\n\n# Base Text Size\nbts <- 10\n\n# Dataframe for this analysis\ndf3 <- rawdf2 |> \n  select(country, iso2c, year = date, value) |> \n  mutate(iso2c = str_to_lower(iso2c)) |> \n  drop_na()\n\n# Not plotting very small territories with population below 750,000\nnot_plot <- df3 |> \n  filter(year == 2022) |> \n  filter(value < 7.5e5) |> \n  pull(iso2c)\n\n# Decadal population rise\ndecade_levels <- c(\n  \"rise_overall\",\n  \"rise60s\",\n  \"rise70s\",\n  \"rise80s\",\n  \"rise90s\",\n  \"rise00s\",\n  \"rise10s\"\n)\n\n# Decade wise population rise in each country\ndecade_df <- df3 |> \n  filter(!(iso2c %in% not_plot)) |> \n  mutate(year = paste0(\"y_\", year)) |> \n  pivot_wider(\n    id_cols = c(country, iso2c),\n    names_from = year,\n    values_from = value\n  ) |> \n  mutate(\n    rise_overall = (y_2023 - y_1961)/y_1961,\n    rise60s = (y_1970 - y_1961)/y_1961,\n    rise70s = (y_1980 - y_1971)/y_1971,\n    rise80s = (y_1990 - y_1981)/y_1981,\n    rise90s = (y_2000 - y_1991)/y_1991,\n    rise00s = (y_2010 - y_2000)/y_2000,\n    rise10s = (y_2020 - y_2010)/y_2010\n  ) |> \n  select(country, iso2c, starts_with(\"rise\")) |> \n  pivot_longer(\n    cols = -c(country, iso2c),\n    names_to = \"decade\",\n    values_to = \"value\"\n  ) |> \n  left_join(link_regions) |> \n  mutate(\n    decade = fct(decade, levels = decade_levels),\n    region = fct(region, levels = region_levels)\n  )\n\n# Selecting countries to highlight and annotate in the plot\n# Top 3 high rise countries each decade\nselcon1 <- decade_df |> \n  group_by(decade) |> \n  slice_max(order_by = value, n = 3) |> \n  ungroup()\n\n# Bottom 2 countries in each decade\nselcon2 <- decade_df |> \n  group_by(decade) |> \n  slice_min(order_by = value, n = 2) |> \n  ungroup()\n\n\n# Overall 10 most populous countries\nselcon3 <- rawdf2 |> \n  filter(date == 2022) |> \n  slice_max(order_by = value, n = 10) |> \n  mutate(iso2c = str_to_lower(iso2c)) |> \n  pull(iso2c)\n\nselcons <- bind_rows(\n  selcon1,\n  selcon2\n) |> \n  mutate(to_show_text = \"display\")\n\nplotdf <- decade_df |> \n  left_join(selcons) |> \n  mutate(\n    to_show_text = if_else(\n      is.na(to_show_text),\n      NA,\n      paste0(country, \" (\", \n             number(round(100*value), suffix = \"%\"),\n             \")\")\n    )\n  ) |> \n  mutate(id_var = row_number())\n\n# Decadal rise overall for the world\noverall_decade_df <- df3 |> \n  group_by(year) |> \n  summarise(total_pop = sum(value, na.rm = T)) |> \n  mutate(\n    country = \"World\",\n    year = paste0(\"y_\", year),\n    \n  ) |> \n  pivot_wider(\n    id_cols = country,\n    values_from = total_pop,\n    names_from = year\n  ) |> \n  mutate(\n    rise60s = (y_1970 - y_1961)/y_1961,\n    rise70s = (y_1980 - y_1971)/y_1971,\n    rise80s = (y_1990 - y_1981)/y_1981,\n    rise90s = (y_2000 - y_1991)/y_1991,\n    rise00s = (y_2010 - y_2000)/y_2000,\n    rise10s = (y_2020 - y_2010)/y_2010,\n    .keep = \"none\"\n  ) |> \n  pivot_longer(\n    cols = everything(),\n    names_to = \"decade\",\n    values_to = \"value\"\n  ) |> \n  mutate(decade = fct(decade, levels = decade_levels))\n\nplot_title <- \"Rising and Falling: Nations' Population in past 6 Decades\"\n\n# Caption stuff for the plot\nsysfonts::font_add(\n  family = \"Font Awesome 6 Brands\",\n  regular = here::here(\"docs\", \"Font Awesome 6 Brands-Regular-400.otf\")\n)\ngithub <- \"&#xf09b\"\ngithub_username <- \"aditya-dahiya\"\nxtwitter <- \"&#xe61b\"\nxtwitter_username <- \"@adityadahiyaias\"\nsocial_caption_1 <- glue::glue(\"<span style='font-family:\\\"Font Awesome 6 Brands\\\";'>{github};</span> <span style='color: {text_col}'>{github_username}  </span>\")\nsocial_caption_2 <- glue::glue(\"<span style='font-family:\\\"Font Awesome 6 Brands\\\";'>{xtwitter};</span> <span style='color: {text_col}'>{xtwitter_username}</span>\")\n\n\nplot_caption <- paste0(\n  \"**Data:** World Bank Databank. |  \",\n  \"**Code:** \", \n  social_caption_1, \n  \" |  **Graphics:** \", \n  social_caption_2\n  )\n\n# Making an alternative for ggbeeswarm for interactivity\nplotdf0 <- plotdf |> \n  mutate(y_value = round_to_fraction(value, 40))\n  \nplotdf1 <- plotdf |> \n  mutate(y_value = round_to_fraction(value, 40)) |> \n  group_by(decade, y_value) |> \n  slice_head(n = 10) |> \n  count() |> \n  rename(gp_nos = n)\n\n# A position multiplication Factor (to manually create a beeswarm)\nposition_vector <- seq(-0.4, +0.4, length.out = 10)\n\nplotdf2 <- plotdf0 |> \n  left_join(plotdf1) |> \n  group_by(decade, y_value) |> \n  arrange(decade, y_value) |> \n  mutate(group_num = row_number()) |> \n  mutate(y_jizz = case_when(\n    group_num ==  1 ~ -0.04444444,\n    group_num ==  2 ~ +0.04444444,\n    group_num ==  3 ~ -0.13333333,\n    group_num ==  4 ~ +0.13333333,\n    group_num ==  5 ~ -0.22222222,\n    group_num ==  6 ~ +0.22222222,\n    group_num ==  7 ~ -0.31111111,\n    group_num ==  8 ~ +0.31111111,\n    group_num ==  9 ~ -0.40000000,\n    group_num == 10 ~ +0.40000000\n  )) |> \n  mutate(y_var = as.numeric(decade) + y_jizz)\n\nbts = 9\n\nlibrary(ggiraph)\n\ng_base <- plotdf2 |> \n  filter(decade != \"rise_overall\") |> \n  ggplot(\n    mapping = aes(\n      x = y_var,\n      y = y_value,\n      label = country,\n      colour = region,\n      data_id = iso2c\n    )\n  ) +\n  \n  # Beeswarm of the plot\n  ggiraph::geom_point_interactive(\n    mapping = aes(\n      tooltip = paste0(\n        \"Country: \",\n        country,\n        \"\\nRegion:\",\n        region,\n        \"\\nDecadal Population Change: \",\n        round(value*100, 1), \" %\"\n      )\n    ),\n    pch = 19,\n    alpha = 1,\n    size = 1.5, \n    hover_nearest = FALSE\n  ) +\n  \n  # Horizontal Line Annotations\n  geom_hline(\n    yintercept = 1,\n    colour = text_hil,\n    linewidth = 0.5,\n    alpha = 0.5\n  ) +\n  annotate(\n    geom = \"text\",\n    label = \"100% rise -- population doubled in the decade\",\n    x = 8.1,\n    y = 1.02,\n    family = \"caption_font\",\n    colour = text_hil,\n    hjust = 1,\n    vjust = 0,\n    size = bts/2\n  ) +\n  geom_hline(\n    yintercept = 2,\n    colour = text_hil,\n    linewidth = 0.5,\n    alpha = 0.5\n  ) +\n  annotate(\n    geom = \"text\",\n    label = \"200% rise -- population tripled in the decade\",\n    x = 8.1,\n    y = 2.02,\n    family = \"caption_font\",\n    colour = text_hil,\n    hjust = 1,\n    vjust = 0,\n    size = bts/2\n  ) +\n  geom_hline(\n    yintercept = 0,\n    colour = text_hil,\n    linewidth = 0.5,\n    alpha = 0.5\n  ) +\n  annotate(\n    geom = \"text\",\n    label = \"Static Population\",\n    x = 8.1,\n    y = 0.02,\n    family = \"caption_font\",\n    colour = text_hil,\n    hjust = 1,\n    vjust = 0,\n    size = bts/2\n  ) +\n  \n  # Labels\n  labs(\n    y = \"Change in population (%)\",\n    x = NULL,\n    colour = NULL,\n    title = plot_title,\n    caption = plot_caption,\n    subtitle = \"Hover over a dot to see Country details. Hover here to read about the Data Source.\"\n  ) +\n\n  # Scales and Coordinates\n  scale_color_manual_interactive(\n    values = mypal,\n    data_id = function(x) x, \n    tooltip = function(x) x\n    ) +\n  scale_y_continuous(\n    labels = label_percent()\n  ) +\n  scale_x_continuous(\n    breaks = 1:7,\n    labels = c(\"\", \"1960s\", \"1970s\", \"1980s\", \n               \"1990s\", \"2000s\", \"2010s\"),\n    limits = c(1.25, 8.15),\n    expand = expansion(0)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal(\n    base_family = \"body_font\",\n    base_size = bts\n  ) +\n  theme(\n    legend.position = c(0.99, 0.92),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    legend.justification = c(1, 1),\n    legend.text = element_text(\n      colour = text_hil,\n      family = \"body_font\",\n      size = 1.5 * bts\n    ),\n    legend.key.height = unit(2, \"mm\"),\n    plot.title = element_text(\n      size = 3 * bts,\n      colour = text_hil,\n      family = \"title_font\"\n    ),\n    plot.subtitle = element_text_interactive(\n      size = 1.5 * bts,\n      colour = text_hil,\n      family = \"title_font\",\n      data_id = \"plot.subtitle\",\n      tooltip = \"About the Data: The data for the plot is sourced from the official World Bank databank, encompassing total population figures from 1960 to 2023. These midyear estimates are based on the de facto definition of population, counting all residents regardless of legal status or citizenship. The data is compiled from multiple reputable sources, including the United Nations Population Division, national statistical offices, Eurostat, the U.S. Census Bureau, and the Secretariat of the Pacific Community, ensuring comprehensive and reliable demographic information.\"\n    ),\n    plot.caption = element_textbox(\n      colour = text_hil,\n      family = \"caption_font\",\n      hjust = 0.5,\n      size = 1.5 * bts\n    ),\n    panel.grid.major.y = element_line(\n      linewidth = 0.5\n    ),\n    legend.background = element_rect(\n      fill = bg_col,\n      colour = \"transparent\"\n    ),\n    plot.title.position = \"plot\",\n    axis.text.x = element_text(\n      size = 2 * bts,\n      colour = text_hil,\n      margin = margin(0,0,0,0, \"mm\")\n    ),\n    axis.text.y = element_text(\n      margin = margin(0,0,0,0, \"mm\"),\n      size = 1.5 * bts\n    ),\n    axis.title = element_text(\n      colour = text_hil,\n      margin = margin(0,0,0,0, \"mm\"),\n      size = 1.5 * bts\n    )\n  )\n\ngirafe(\n  ggobj = g_base,\n  options = list(\n    opts_tooltip(\n      opacity = 1,\n      css = \"background-color:#ffffff;color:#333333;padding:2px;border-radius:3px;font-family:Arial\"\n    ),\n    opts_hover(\n      css = \"stroke:black;stroke-width:3px;\"),\n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_zoom(max = 10)\n  )\n)\n```\n:::\n\n\n**About the Data:** The data for the plot is sourced from the official World Bank data-bank, encompassing total population figures from 1960 to 2023. These midyear estimates are based on the de-facto definition of population, counting all residents regardless of legal status or citizenship. The data is compiled from multiple reputable sources, including the United Nations Population Division, national statistical offices, Eurostat, the U.S. Census Bureau, and the Secretariat of the Pacific Community, ensuring comprehensive and reliable demographic information.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}